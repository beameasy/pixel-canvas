"use strict";var e=require("react"),t=require("../../errors.js");require("ofetch");let r="0x0000000000000000000000000000000000000000";let s="https://api.relay.link",a="https://api.testnets.relay.link";async function n({transactionHash:e,isTestnet:t}){let r=await fetch((t?a:s)+"/requests/v2?hash="+e),n=await r.json();if(!r.ok){if("message"in n&&"string"==typeof n.message)throw Error(n.message);throw Error("Error fetching request from relay")}return n.requests.at(0)?.status??"pending"}class i extends t.PrivyClientError{constructor(e,r){super("We were unable to complete the bridging transaction. Funds will be refunded on your wallet.",void 0,t.PrivyErrorCode.TRANSACTION_FAILURE),this.relayLink=r?`https://testnets.relay.link/transaction/${e}`:`https://relay.link/transaction/${e}`}}exports.RelayRequestError=i,exports.getQuote=async({input:e,isTestnet:t})=>{let r=await fetch((t?a:s)+"/execute/swap",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(e)}),n=await r.json();if(!(r.ok||"string"==typeof n.message&&n.message.startsWith("Invalid address")))throw console.error("Relay error:",n),Error(n.message??"Error fetching quote from relay");return n},exports.toEvmTransactionRequestInfoFromQuote=e=>{let t=e.steps[0]?.items?.[0];if(t)return{from:t.data.from,to:t.data.to,value:Number(t.data.value),chainId:Number(t.data.chainId),data:t.data.data}},exports.toGetQuoteInput=({destinationCurrency:e,...t})=>({tradeType:"EXACT_OUTPUT",originCurrency:r,destinationCurrency:e??r,...t}),exports.useBridgingStatusPolling=function({transactionHash:t,wallet:r,isTestnet:s,bridgingStatus:a,setBridgingStatus:o,onSuccess:l,onFailure:u}){e.useEffect((()=>{if(t&&r&&a){if(["delayed","waiting","pending"].includes(a)){let e=setInterval((async()=>{try{let e=await n({transactionHash:t,isTestnet:s});o(e)}catch(e){console.error(e)}}),1e3);return()=>clearInterval(e)}"success"===a?l({transactionHash:t,wallet:r}):["refund","failure"].includes(a)&&u({error:new i(t,s)})}}),[a,t,s,r])};
