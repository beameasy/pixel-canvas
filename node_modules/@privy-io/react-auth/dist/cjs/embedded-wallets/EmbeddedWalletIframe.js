"use strict";var e,r=require("react/jsx-runtime"),t=require("react"),i=require("../hooks/events-context.js"),a=require("../utils/index.js"),n=require("./errors.js"),o=require("./eventCallbacksQueue.js"),s=require("./invokeWithMfa.js");require("../connectors/get-legacy-injected-providers.js"),require("../connectors/is-wallet-installed.js"),require("../errors.js"),require("ofetch"),require("../utils/eth/getPublicClient.js"),require("viem"),require("./types.js");let l=(e=0,()=>"id-"+e++);function v(e){return void 0!==e.error}let u=new o.EventCallbacksQueue,m=new Map,c=(e,r)=>"bigint"==typeof r?r.toString():r,d=(e,r)=>`${e}${JSON.stringify(r,c)}`;function f(e,r,t,i){let a=t.contentWindow;if(!a)throw Error("iframe not initialized");let n=d(e,r);if("privy:wallet:create"===e){let e=m.get(n);if(e)return e}let o=new Promise(((t,n)=>{let o=l();u.enqueue(o,{resolve:t,reject:n}),a.postMessage({id:o,event:e,data:r},i)})).finally((()=>{m.delete(n)}));return m.set(n,o),o}exports.EmbeddedWalletIframe=function(e){let o=t.useRef(null),l=t.useRef(e.mfaMethods),m=i.useEmitPrivyEvent(),[c,d]=t.useState(!1);return t.useEffect((()=>{l.current=e.mfaMethods}),[e.mfaMethods]),t.useEffect((()=>{if(!c)return;let r=o.current;if(!r)return;function t(r){var t;r&&r.origin===e.origin&&"string"==typeof(t=r.data).event&&/^privy:.+/.test(t.event)&&function(e){switch(e.event){case"privy:iframe:ready":let r=u.dequeue(e.event,e.id);return v(e)?r.reject(new n.PrivyIframeError(e.error.type,e.error.message)):r.resolve(e.data);case"privy:wallets:create":{let r=u.dequeue(e.event,e.id);return v(e)?r.reject(new n.PrivyIframeError(e.error.type,e.error.message)):r.resolve(e.data)}case"privy:wallets:add":{let r=u.dequeue(e.event,e.id);return v(e)?r.reject(new n.PrivyIframeError(e.error.type,e.error.message)):r.resolve(e.data)}case"privy:wallets:set-recovery":{let r=u.dequeue(e.event,e.id);return v(e)?r.reject(new n.PrivyIframeError(e.error.type,e.error.message)):r.resolve(e.data)}case"privy:wallets:connect":{let r=u.dequeue(e.event,e.id);return v(e)?r.reject(new n.PrivyIframeError(e.error.type,e.error.message)):r.resolve(e.data)}case"privy:wallets:recover":{let r=u.dequeue(e.event,e.id);return v(e)?r.reject(new n.PrivyIframeError(e.error.type,e.error.message)):r.resolve(e.data)}case"privy:wallets:rpc":{let r=u.dequeue(e.event,e.id);return v(e)?r.reject(new n.PrivyIframeError(e.error.type,e.error.message)):r.resolve(e.data)}case"privy:wallet:create":let t=u.dequeue(e.event,e.id);return v(e)?t.reject(new n.PrivyIframeError(e.error.type,e.error.message)):t.resolve(e.data);case"privy:wallets:import":let i=u.dequeue(e.event,e.id);return v(e)?i.reject(new n.PrivyIframeError(e.error.type,e.error.message)):i.resolve(e.data);case"privy:mfa:verify":let a=u.dequeue(e.event,e.id);return v(e)?a.reject(new n.PrivyIframeError(e.error.type,e.error.message)):a.resolve(e.data);case"privy:mfa:init-enrollment":{let r=u.dequeue(e.event,e.id);return v(e)?r.reject(new n.PrivyIframeError(e.error.type,e.error.message)):r.resolve(e.data)}case"privy:mfa:submit-enrollment":{let r=u.dequeue(e.event,e.id);return v(e)?r.reject(new n.PrivyIframeError(e.error.type,e.error.message)):r.resolve(e.data)}case"privy:mfa:unenroll":{let r=u.dequeue(e.event,e.id);return v(e)?r.reject(new n.PrivyIframeError(e.error.type,e.error.message)):r.resolve(e.data)}case"privy:mfa:clear":{let r=u.dequeue(e.event,e.id);return v(e)?r.reject(new n.PrivyIframeError(e.error.type,e.error.message)):r.resolve(e.data)}case"privy:auth:unlink-passkey":{let r=u.dequeue(e.event,e.id);return v(e)?r.reject(new n.PrivyIframeError(e.error.type,e.error.message)):r.resolve(e.data)}case"privy:solana-wallet:create":let o=u.dequeue(e.event,e.id);return v(e)?o.reject(new n.PrivyIframeError(e.error.type,e.error.message)):o.resolve(e.data);case"privy:farcaster:init-signer":{let r=u.dequeue(e.event,e.id);return v(e)?r.reject(new n.PrivyIframeError(e.error.type,e.error.message)):r.resolve(e.data)}case"privy:farcaster:sign":{let r=u.dequeue(e.event,e.id);return v(e)?r.reject(new n.PrivyIframeError(e.error.type,e.error.message)):r.resolve(e.data)}case"privy:delegated-actions:consent":{let r=u.dequeue(e.event,e.id);return v(e)?r.reject(new n.PrivyIframeError(e.error.type,e.error.message)):r.resolve(e.data)}default:console.warn("Unsupported wallet proxy method:",e)}}(r.data)}let i={createWallet:t=>s.invokeWithMfa((i=>f("privy:wallets:create",{...t,...i},r,e.origin)),l.current,e.mfaPromise,e.mfaSubmitPromise,m),addWallet:t=>s.invokeWithMfa((i=>f("privy:wallets:add",{...t,...i},r,e.origin)),l.current,e.mfaPromise,e.mfaSubmitPromise,m),setRecovery:t=>s.invokeWithMfa((i=>f("privy:wallets:set-recovery",{...t,...i},r,e.origin)),l.current,e.mfaPromise,e.mfaSubmitPromise,m),connect:t=>s.invokeWithMfa((i=>f("privy:wallets:connect",{...t,...i},r,e.origin)),l.current,e.mfaPromise,e.mfaSubmitPromise,m),recover:t=>s.invokeWithMfa((i=>f("privy:wallets:recover",{...t,...i},r,e.origin)),l.current,e.mfaPromise,e.mfaSubmitPromise,m,!t.recoveryAccessToken&&!t.recoveryPassword&&!t.recoverySecretOverride),rpc:t=>s.invokeWithMfa((i=>f("privy:wallets:rpc",{...t,...i},r,e.origin)),l.current,e.mfaPromise,e.mfaSubmitPromise,m),create:t=>f("privy:wallet:create",t,r,e.origin),importWallet:t=>f("privy:wallets:import",t,r,e.origin),createSolana:t=>s.invokeWithMfa((i=>f("privy:solana-wallet:create",{...t,...i},r,e.origin)),l.current,e.mfaPromise,e.mfaSubmitPromise,m),createDelegatedAction:t=>f("privy:delegated-actions:consent",t,r,e.origin),verifyMfa:t=>s.invokeWithMfa((i=>f("privy:mfa:verify",{...t,...i},r,e.origin)),l.current,e.mfaPromise,e.mfaSubmitPromise,m,!0),initEnrollMfa:t=>s.invokeWithMfa((i=>f("privy:mfa:init-enrollment",{...t,...i},r,e.origin)),l.current,e.mfaPromise,e.mfaSubmitPromise,m),submitEnrollMfa:t=>s.invokeWithMfa((i=>f("privy:mfa:submit-enrollment",{...t,...i},r,e.origin)),l.current,e.mfaPromise,e.mfaSubmitPromise,m),unenrollMfa:t=>s.invokeWithMfa((i=>f("privy:mfa:unenroll",{...t,...i},r,e.origin)),l.current,e.mfaPromise,e.mfaSubmitPromise,m),clearMfa:t=>f("privy:mfa:clear",t,r,e.origin),unlinkPasskeyAccount:t=>s.invokeWithMfa((i=>f("privy:auth:unlink-passkey",{...t,...i},r,e.origin)),l.current,e.mfaPromise,e.mfaSubmitPromise,m),initFarcasterSigner:t=>f("privy:farcaster:init-signer",t,r,e.origin),signFarcasterMessage:t=>f("privy:farcaster:sign",t,r,e.origin)};window.addEventListener("message",t);let d=new AbortController;return a.invokeUntilSettled((()=>f("privy:iframe:ready",{},r,e.origin)),{abortSignal:d.signal}).then((()=>e.onLoad(i)),((...r)=>{console.warn("Privy iframe failed to load: ",...r),e.onLoadFailed()})),()=>{window.removeEventListener("message",t),d.abort()}}),[c]),
/*#__PURE__*/r.jsx("iframe",{ref:o,width:"0",height:"0",style:{display:"none",height:"0px",width:"0px"},onLoad:()=>d(!0),src:a.constructURL(e.origin,`/apps/${e.appId}/embedded-wallets`,{caid:e.clientAnalyticsId,client_id:e.appClientId})})};
