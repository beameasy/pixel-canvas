"use strict";var e=require("react/jsx-runtime"),r=require("@heroicons/react/24/outline/CheckCircleIcon"),n=require("react"),i=require("viem"),t=require("../../components/Layouts.js"),s=require("../../components/ModalFooter.js"),o=require("../../components/ScreenHeader.js"),a=require("../../components/embedded-wallets/FundWalletMethodHeader.js"),c=require("../../components/primitives/NeutralSpinner/index.js"),u=require("../../connectors/chains/utils.js"),l=require("../../constants.js"),d=require("../../errors.js"),h=require("../../hooks/internal-context.js"),g=require("../../hooks/modal-context.js"),m=require("../../hooks/useGetTokenPrice.js"),q=require("../../hooks/useWallets.js"),j=require("../../lib/erc20/actions/abis/transfer.js"),p=require("../../lib/erc20/formatErc20TokenAmount.js"),f=require("../../lib/ethers.js"),v=require("../../lib/external-wallets/displayHelpers.js"),y=require("../../lib/funding/analytics.js"),C=require("../../lib/funding/reservoir.js"),S=require("../../lib/wallets/actions/getBalanceForChains.js"),b=require("../../lib/wallets/actions/getErc20Balance.js"),E=require("../../utils/index.js"),T=require("../../utils/eth/getPublicClient.js"),I=require("../index.js"),w=require("./BridgeNetworkSelectionView.js"),A=require("./TransferOrBridgeLoadingScreen.js");function N(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}require("styled-components"),require("../../configuration/context.js"),require("../../config.js"),require("../../configuration/defaultClientConfig.js"),require("../../configuration/login-methods.js"),require("../../configuration/wallets.js"),require("../../connectors/chains/index.js"),require("../../connectors/chains/arbitrum.js"),require("../../connectors/chains/arbitrumSepolia.js"),require("../../connectors/chains/avalanche.js"),require("../../connectors/chains/avalancheFuji.js"),require("../../connectors/chains/base.js"),require("../../connectors/chains/baseSepolia.js"),require("../../connectors/chains/berachainArtio.js"),require("../../connectors/chains/celo.js"),require("../../connectors/chains/celoAlfajores.js"),require("../../connectors/chains/filecoin.js"),require("../../connectors/chains/filecoinCalibration.js"),require("../../connectors/chains/garnetHolesky.js"),require("../../connectors/chains/holesky.js"),require("../../connectors/chains/linea.js"),require("../../connectors/chains/lineaTestnet.js"),require("../../connectors/chains/lukso.js"),require("../../connectors/chains/mainnet.js"),require("../../connectors/chains/optimism.js"),require("../../connectors/chains/optimismSepolia.js"),require("../../connectors/chains/polygon.js"),require("../../connectors/chains/polygonAmoy.js"),require("../../connectors/chains/redstone.js"),require("../../connectors/chains/sepolia.js"),require("../../connectors/chains/zora.js"),require("../../connectors/chains/zoraSepolia.js"),require("../../connectors/chains/zoraTestnet.js"),require("../../lib/solana/index.js"),require("../../theme.js"),require("tinycolor2"),require("../../lib/cybr53.js"),require("../../svg/protected-by-privy.js"),require("../../components/ModalHeader.js"),require("@heroicons/react/24/outline/ArrowLeftIcon"),require("@heroicons/react/24/outline/ArrowRightIcon"),require("@heroicons/react/24/outline/QuestionMarkCircleIcon"),require("@heroicons/react/24/outline/XMarkIcon"),require("../../hooks/index.js"),require("ofetch"),require("../../components/PrefetchedImage.js"),require("../../hooks/useGetSolPrice.js"),require("../../connectors/get-legacy-injected-providers.js"),require("../../connectors/is-wallet-installed.js"),require("../../svg/backpack.js"),require("../../svg/brave-browser-icon.js"),require("../../svg/bybit.js"),require("../../svg/coinbase-wallet.js"),require("../../svg/cryptocom.js"),require("../../svg/metamask.js"),require("../../svg/okx-wallet.js"),require("../../svg/phantom.js"),require("../../svg/rabby.js"),require("../../svg/rainbow.js"),require("../../svg/safe.js"),require("../../svg/solflare.js"),require("../../svg/uniswap.js"),require("../../svg/universal-profile.js"),require("../../svg/wallet-connect.js"),require("../../svg/zerion.js"),require("@privy-io/js-sdk-core"),require("../../components/Button.js"),require("../../components/Loader.js"),require("../../components/ui/layout/Row.js"),require("../../components/ui/typography/ErrorMessage.js"),require("../../components/ui/typography/LabelSm.js"),require("../../components/ui/typography/Subtitle.js"),require("../../components/ui/typography/Title.js"),require("../../components/ui/wallet/NetworkBalanceCard.js"),require("@heroicons/react/24/outline/WalletIcon"),require("../../components/ui/chips/Chip.js"),require("../../components/ui/animation/LoadingSkeleton.js"),require("../../components/ui/typography/Value.js"),require("../../components/ui/wallet/NetworkIcon.js"),require("@heroicons/react/24/outline/GlobeAltIcon"),require("../../components/ui/icons/Arbitum.js"),require("../../components/ui/icons/Avalanche.js"),require("../../components/ui/icons/Base.js"),require("../../components/ui/icons/Celo.js"),require("../../components/ui/icons/Linea.js"),require("../../components/ui/icons/Mainnnet.js"),require("../../components/ui/icons/Optimism.js"),require("../../components/ui/icons/Polygon.js"),require("../../components/ui/icons/Solana.js"),require("../../components/ui/icons/Zora.js"),require("../../components/ui/wallet/shared.js"),require("../../components/ui/wallet/NetworkSelectorPanel.js"),require("@headlessui/react"),require("@heroicons/react/24/outline/ChevronDownIcon"),require("./styles.js"),require("../LinkPasskeyScreen.js"),require("@heroicons/react/24/outline/ClockIcon"),require("@heroicons/react/24/outline/TrashIcon"),require("@heroicons/react/24/solid/CheckBadgeIcon"),require("@heroicons/react/24/solid/LockClosedIcon"),require("../../hooks/privy-context.js"),require("../../svg/face-id.js"),require("../../svg/fingerprint.js"),require("../MfaScreens/StyledComponents.js"),require("../../components/external-wallets/InjectedWalletIcon.js"),require("../../components/ui/wallet/Address.js"),require("@heroicons/react/24/outline/CheckIcon"),require("@heroicons/react/24/outline/Square2StackIcon");var x=/*#__PURE__*/N(r);exports.AwaitingExternalTransferScreen=()=>{let{rpcConfig:r,appId:N,closePrivyModal:F,createAnalyticsEvent:k}=h.usePrivyInternal(),{navigate:P,setModalData:B,app:R,data:_}=g.usePrivyModal(),{wallets:M}=q.useWallets(),[L,W]=n.useState(!1),[U,H]=n.useState(0n),[O,D]=n.useState(!1),[G,$]=n.useState(null),[Q,V]=n.useState(null),[z,Y]=n.useState([]),[J,X]=n.useState(0),[Z,K]=n.useState(!1),[ee,re]=n.useState(!1),[ne,ie]=n.useState(!1),[te,se]=n.useState(!1),[oe,ae]=n.useState(),[ce,ue]=n.useState();if(!_?.funding||"ethereum"!==_.funding.chainType)throw Error("Invalid funding data");let{erc20ContractInfo:le,chain:de,connectedWalletAddress:he}=_.funding,ge=_.funding.address,me=_.funding.erc20Address,[qe,je]=n.useState(_.funding.amount);n.useEffect((()=>{me&&!le&&$(Error("Unable to fetch token details"))}),[]);let pe=!!me&&!!le,fe=pe?BigInt(parseFloat(qe)*10**le.decimals):i.parseEther(qe),ve=he?M.find((({address:e})=>e===he)):M[0],[ye,Ce]=n.useState(null);n.useEffect((()=>{(async()=>{if(!ve)return;let e=await ve.getEthereumProvider();Ce(i.createWalletClient({account:ve.address,transport:i.custom(e)}).extend(i.publicActions))})().catch(console.error)}),[ve]);let[Se,be]=n.useState(0n);n.useEffect((()=>{i.createPublicClient({chain:de,transport:i.http(T.getJsonRpcEndpointFromChain(de,r,N))}).getBalance({address:ge}).then(be).catch(console.error)}),[]);let[Ee,Te]=n.useState(0n);n.useEffect((()=>{pe&&b.getErc20Balance({chain:de,address:ge,appId:N,rpcConfig:r,erc20Address:me}).then((e=>Te(e.balance))).catch(console.error)}),[]);let{tokenPrice:Ie}=m.useGetTokenPrice(de.id),[we,Ae]=n.useState({to:ge,chain:de,value:fe,data:void 0});n.useEffect((()=>{(async()=>{let e,n;if(!ye||!ve||Z||ne)return;K(!0);let t=i.createPublicClient({chain:we.chain,transport:i.http(T.getJsonRpcEndpointFromChain(we.chain,r,N))});if(pe&&!we.data)return await t.simulateContract({address:me,chain:we.chain,abi:j.ERC20_TRANSFER_ABI_STUB,functionName:"transfer",args:[ge,fe],account:ve.address}).catch((e=>{console.warn("Simulated token transfer failed with error, fetching bridge options.",e)}))?(K(!1),void Ae({to:me,chain:we.chain,data:i.encodeFunctionData({abi:j.ERC20_TRANSFER_ABI_STUB,functionName:"transfer",args:[ge,fe]}),value:"0x0"})):(K(!1),void D(!0));try{e=await t.prepareTransactionRequest({account:ve.address,to:we.to,chain:we.chain,data:we.data,value:BigInt(we.value??0)})}catch(e){if(console.error(e),z.length>1)V(e.shortMessage??"Something went wrong");else if(ee&&0===z.length)return void $(new d.PrivyClientError(`Wallet ${E.formatWalletAddress(ve.address)} does not have enough funds.`,void 0,d.PrivyErrorCode.INSUFFICIENT_BALANCE))}if(!e)return K(!1),void D(!0);K(!1),ie(!0),W(!0),H(e.gas);try{await ye.switchChain({id:we.chain.id})}catch(e){await ye.addChain({chain:we.chain}),await ye.switchChain({id:we.chain.id})}try{n=await ye.sendTransaction(e)}catch(e){if(console.error(e),"TransactionExecutionError"===e.name)if(z.length<1){let r=e.shortMessage;(e.shortMessage.includes("rejected the request")||e.details.includes("rejected the request"))&&(r="User rejected the request."),$(new d.PrivyClientError(r,void 0,d.PrivyErrorCode.TRANSACTION_FAILURE))}else V(e.shortMessage??"Something went wrong")}if(n)return await ye.waitForTransactionReceipt({hash:n}),ie(!1),ee?(ae(n),void ue("pending")):(se(!0),void k({eventName:y.ON_RAMP_COMPLETE_ANALYTICS_EVENT,payload:{provider:"external",status:"success",txHash:n,address:ve.address,chainId:we.chain.id,chainType:"ethereum",value:we.value?i.formatUnits(BigInt(we.value),le?.decimals??18):void 0,token:le?.symbol??me??"ETH",destinationAddress:ge,destinationChainId:de.id,destinationChainType:"ethereum",destinationValue:fe?i.formatUnits(fe,le?.decimals??18):void 0,destinationToken:le?.symbol??me??de.nativeCurrency.name}}));ie(!1)})().catch(console.error)}),[ye,we]),n.useEffect((()=>{(async()=>{if(!O||!ye||!ve)return;let e=u.addToDefaultChains(R.chains).filter((e=>e.id!==de.id&&!!e.testnet==!!de.testnet));pe&&e.unshift(de);let n=await S.getBalanceForChains({chains:e,address:ve.address,appId:N,rpcConfig:r}),i=pe?n.filter((e=>e.balance>0n)):n.filter((e=>e.balance>fe));if(i.length<1)return void $(new d.PrivyClientError(`Wallet ${E.formatWalletAddress(ve.address)} does not have enough funds.`,void 0,d.PrivyErrorCode.INSUFFICIENT_BALANCE));i.sort(((e,r)=>Number(r.balance-e.balance)));let t=(await Promise.allSettled(i.map((async e=>({quote:await C.getQuote({isTestnet:!!de.testnet,input:C.toGetQuoteInput({amount:fe.toString(),user:ve.address,recipient:ge,destinationChainId:de.id,destinationCurrency:me,originChainId:e.chain.id})}),...e}))))).filter((e=>"fulfilled"===e.status)).map((e=>e.value));if(t.length<1)return void $(new d.PrivyClientError(`Wallet ${E.formatWalletAddress(ve.address)} does not have enough funds.`,void 0,d.PrivyErrorCode.INSUFFICIENT_BALANCE));let s=t.map((e=>({bridgeTx:C.toEvmTransactionRequestInfoFromQuote(e.quote),balance:e.balance,chain:e.chain}))).filter((e=>!!e.bridgeTx));if(s.length>1)return void Y(s);let o=s[0];o?(re(!0),Ae({data:o.bridgeTx.data,to:o.bridgeTx.to,value:o.bridgeTx.value,chain:o.chain})):$(new d.PrivyClientError(`Wallet ${E.formatWalletAddress(ve.address)} does not have enough funds.`,void 0,d.PrivyErrorCode.INSUFFICIENT_BALANCE))})().catch(console.error)}),[O]),C.useBridgingStatusPolling({transactionHash:oe,wallet:ve,isTestnet:!!de.testnet,bridgingStatus:ce,setBridgingStatus:ue,onSuccess({transactionHash:e,wallet:r}){re(!1),se(!0),k({eventName:y.ON_RAMP_COMPLETE_ANALYTICS_EVENT,payload:{provider:"external",status:"success",txHash:e,address:r.address,chainId:we.chain.id,chainType:"ethereum",value:we.value?i.formatUnits(BigInt(we.value),le?.decimals??18):void 0,token:le?.symbol??me??"ETH",destinationAddress:ge,destinationChainId:de.id,destinationChainType:"ethereum",destinationValue:fe?i.formatUnits(fe,le?.decimals??18):void 0,destinationToken:le?.symbol??me??de.nativeCurrency.name}})},onFailure({error:e}){re(!1),$(e)}}),n.useEffect((()=>{if(!G)return;let e={error:G,previousScreen:I.ModalScreen.FUNDING_TRANSFER_FROM_WALLET_SCREEN};B({funding:_?.funding,sendTransaction:_?.sendTransaction,errorModalData:e}),P(I.ModalScreen.ERROR_SCREEN,!1)}),[G]);let Ne=ve?v.toDisplayName(ve.walletClientType,ve.connectorType,ve.walletClientType)||"wallet":null,xe=!pe&&Ie?f.getDollarsFromStringFloat(qe??"0",Ie):void 0,Fe=pe?U:f.sumWeiQuantities([U,fe]),ke=Fe&&Ie?f.getDollarsFromWei(Fe,Ie):void 0,Pe=Fe?f.getNativeCurrencyFromWei(Fe,"ETH"):void 0,Be=U&&Ie?f.getDollarsFromWei(U,Ie):void 0,Re=U?f.getNativeCurrencyFromWei(U,"ETH"):void 0;if(n.useEffect((()=>{if(!te)return;let e=setTimeout(F,l.DEFAULT_SUCCESS_SCREEN_EXTRA_LONG_DURATION_MS);return()=>clearTimeout(e)}),[te]),te/*#__PURE__*/)return e.jsxs(e.Fragment,{children:[/*#__PURE__*/e.jsx(a.default,{}),/*#__PURE__*/e.jsx(t.RefactorSpacerTop,{}),/*#__PURE__*/e.jsxs(t.CenteredItemWithGap,{children:[/*#__PURE__*/e.jsx(x.default,{color:"var(--privy-color-success)",width:"64px",height:"64px"}),/*#__PURE__*/e.jsx(o.CenteredScreenHeader,{title:"Success!",description:`You’ve successfully added ${qe} ${pe?le.symbol:de.nativeCurrency.symbol} to your ${R.name} wallet. It may take a minute before the funds are available to use.`})]}),/*#__PURE__*/e.jsx(t.RefactorSpacerBottom,{}),/*#__PURE__*/e.jsx(s.BlobbyFooter,{})]});let _e=pe?`${p.formatErc20TokenAmount({amount:Ee,decimals:le.decimals})}  ${le.symbol}`:f.getNativeCurrencyFromWei(Se,de.nativeCurrency.symbol,3,!0),Me=z[J];return z.length>1&&Me?/*#__PURE__*/e.jsx(w.BridgeNetworkSelectionView,{displayName:Ne,configuredFundingChain:de,formattedBalance:_e,fundingAmount:qe,fundingCurrency:pe?le.symbol:de.nativeCurrency.symbol,fundingAmountInUsd:xe,options:z,selectedOption:Me,isPreparing:Z,isSubmitting:ne,addressToFund:ge,fundingWalletAddress:ve?.address||"",errorMessage:Q,onSubmit:()=>{_.funding?.amount!==qe?async function(){if(ve&&Me)try{let e=await C.getQuote({isTestnet:!!de.testnet,input:C.toGetQuoteInput({amount:fe.toString(),user:ve.address,recipient:ge,destinationChainId:de.id,destinationCurrency:me,originChainId:Me.chain.id})}),r=C.toEvmTransactionRequestInfoFromQuote(e);if(!r)throw Error("Invalid transaction request");re(!0),Ae({data:r.data,to:r.to,value:r.value,chain:Me.chain})}catch(e){console.error(e),$(new d.PrivyClientError("Unable to fetch quotes for bridging",e,d.PrivyErrorCode.INSUFFICIENT_BALANCE))}}().catch(console.error):Ae({to:Me.bridgeTx.to,data:Me.bridgeTx.data,value:Me.bridgeTx.value,chain:Me.chain})},onSelect:e=>{e!==J&&(V(null),X(e))},onAmountChange:je}):L&&U&&ve&&_?.funding?/*#__PURE__*/e.jsx(A.TransferOrBridgeLoadingScreen,{wallet:ve,displayName:Ne,addressToFund:ge,isBridging:ee,isErc20Flow:pe,totalPriceInUsd:ke,totalPriceInNativeCurrency:Pe,gasPriceInUsd:Be,gasPriceInNativeCurrency:Re,chainId:de.id,chainName:de.name}):
/*#__PURE__*/e.jsxs(e.Fragment,{children:[/*#__PURE__*/e.jsx(a.default,{}),/*#__PURE__*/e.jsx(c.NeutralSpinner,{}),/*#__PURE__*/e.jsx("div",{style:{marginTop:"1rem"}}),/*#__PURE__*/e.jsx(s.BlobbyFooter,{})]})};
