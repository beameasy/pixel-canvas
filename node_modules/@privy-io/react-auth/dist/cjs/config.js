"use strict";var e=require("./configuration/defaultClientConfig.js"),n=require("./configuration/login-methods.js"),a=require("./configuration/wallets.js"),o=require("./connectors/chains/index.js"),t=require("./connectors/chains/mainnet.js"),l=require("./connectors/chains/utils.js"),i=require("./lib/solana/index.js"),s=require("./theme.js");function r({supportedChains:e,defaultChainFromConfig:n}){let a;if(e){if(0===e.length)throw Error("`supportedChains` must contain at least one chain");a=e.map((e=>{if(e.rpcUrls.privyWalletOverride)return e;let n=o.DEFAULT_SUPPORTED_CHAINS.find((n=>n.id===e.id)),a=n?.rpcUrls.privy?.http[0];return a?l.addPrivyRpcToChain(e,a):e}))}else a=[...o.DEFAULT_SUPPORTED_CHAINS];let i=e?a[0]:t.mainnet,s=n??i;if(!a.find((e=>e.id===s.id)))throw Error("`defaultChain` must be included in `supportedChains`");return{chains:a,defaultChain:s}}require("./constants.js"),require("./connectors/chains/arbitrum.js"),require("./connectors/chains/arbitrumSepolia.js"),require("./connectors/chains/avalanche.js"),require("./connectors/chains/avalancheFuji.js"),require("./connectors/chains/base.js"),require("./connectors/chains/baseSepolia.js"),require("./connectors/chains/berachainArtio.js"),require("./connectors/chains/celo.js"),require("./connectors/chains/celoAlfajores.js"),require("./connectors/chains/filecoin.js"),require("./connectors/chains/filecoinCalibration.js"),require("./connectors/chains/garnetHolesky.js"),require("./connectors/chains/holesky.js"),require("./connectors/chains/linea.js"),require("./connectors/chains/lineaTestnet.js"),require("./connectors/chains/lukso.js"),require("./connectors/chains/optimism.js"),require("./connectors/chains/optimismSepolia.js"),require("./connectors/chains/polygon.js"),require("./connectors/chains/polygonAmoy.js"),require("./connectors/chains/redstone.js"),require("./connectors/chains/sepolia.js"),require("./connectors/chains/zora.js"),require("./connectors/chains/zoraSepolia.js"),require("./connectors/chains/zoraTestnet.js"),require("tinycolor2"),exports.buildChainsAndDefaultChain=r,exports.generateAppConfig=function(o,t,l,c){let d,u,h,g,p,f,C,m,b,y,A,w,W,O,M,q=l?console.warn:()=>{};t?.loginMethods?(d=t.loginMethods.includes("email"),u=t.loginMethods.includes("sms"),g=t.loginMethods.includes("wallet"),p=t.loginMethods.includes("google"),f=t.loginMethods.includes("twitter"),C=t.loginMethods.includes("discord"),b=t.loginMethods.includes("spotify"),y=t.loginMethods.includes("instagram"),m=t.loginMethods.includes("tiktok"),w=t.loginMethods.includes("github"),A=t.loginMethods.includes("linkedin"),W=t.loginMethods.includes("apple"),O=t.loginMethods.includes("farcaster"),M=t.loginMethods.includes("telegram")):(d=o.emailAuth,u=o.smsAuth,g=o.walletAuth||o.solanaWalletAuth,p=o.googleOAuth,f=o.twitterOAuth,C=o.discordOAuth,w=o.githubOAuth,b=o.spotifyOAuth,y=o.instagramOAuth,m=o.tiktokOAuth,A=o.linkedinOAuth,W=o.appleOAuth,O=o.farcasterAuth,M=o.telegramAuth),"undefined"!=typeof window&&"function"!=typeof window.PublicKeyCredential?h=!1:o.passkeyAuth&&(h=!0);let j=[d,u].filter(Boolean),U=[p,f,C,w,b,y,m,A,W,O,M].filter(Boolean),v=[g].filter(Boolean),k=[h&&o.passkeysForSignupEnabled].filter(Boolean);if(j.length+U.length+v.length+k.length===0)throw Error("You must enable at least one login method");let S=void 0!==t?.appearance?.showWalletLoginFirst?t?.appearance?.showWalletLoginFirst:o.showWalletLoginFirst;S&&0===v.length?(q("You should only enable `showWalletLoginFirst` when `wallet` logins are also enabled. `showWalletLoginFirst` has been set to false"),S=!1):S||U.length+j.length!==0||(q("You should only disable `showWalletLoginFirst` when `email`, `sms`, or social logins are also enabled. `showWalletLoginFirst` has been set to true"),S=!0);let L=t?.externalWallets?.walletConnect?.enabled??!0;t?.loginMethods&&t.loginMethodsAndOrder&&q("You should only configure one of `loginMethods` or `loginMethodsAndOrder`");let P=a.toWalletListConfig({input:t?.appearance?.walletList,overrides:t?.loginMethodsAndOrder}),E=n.toCustomLoginMethodConfig({input:t?.loginMethodsAndOrder}),x=t?.intl?.defaultCountry??"US",{chains:T,defaultChain:R}=r({supportedChains:t?.supportedChains,defaultChainFromConfig:t?.defaultChain}),F=!!t?.defaultChain,_=t?.customAuth?.getCustomAccessToken&&!1!==t?.customAuth?.enabled,D=t?.embeddedWallets?.requireUserPasswordOnCreate,I=t?.embeddedWallets?.createOnLogin,N=_?"all-users":o.embeddedWalletConfig.createOnLogin,H=t?.solanaClusters??[];return o.solanaWalletAuth&&!t?.externalWallets?.solana?.connectors&&console.warn("App configuration has Solana wallet login enabled, but no Solana wallet connectors have been passed to Privy. Make sure to pass Solana connectors to the `config.externalWallets.solana.connectors` field of the `PrivyProvider`"),{id:o.id,name:o.name,allowlistConfig:o.allowlistConfig,legacyWalletUiConfig:o.legacyWalletUiConfig,appearance:{logo:t?.appearance?.logo??o.logoUrl,landingHeader:t?.appearance?.landingHeader??e.defaultClientConfig.appearance.landingHeader,loginMessage:"string"==typeof t?.appearance?.loginMessage?t?.appearance?.loginMessage.slice(0,100):t?.appearance?.loginMessage,footerLogo:t?.appearance?.footerLogo,palette:s.generatePalette({backgroundTheme:t?.appearance?.theme??e.defaultClientConfig.appearance.theme,accentHex:t?.appearance?.accentColor??o.accentColor??e.defaultClientConfig.appearance.accentColor}),loginGroupPriority:S?"web3-first":"web2-first",hideDirectWeb2Inputs:!!t?.appearance?.hideDirectWeb2Inputs,walletList:P,walletChainType:t?.appearance?.walletChainType??(({evmWalletAuth:e,solanaWalletAuth:n})=>e&&n?"ethereum-and-solana":e?"ethereum-only":n?"solana-only":"ethereum-only")({evmWalletAuth:o.walletAuth??!1,solanaWalletAuth:o.solanaWalletAuth??!1})},loginMethods:{wallet:g,email:d,sms:u,passkey:h,google:p,twitter:f,discord:C,github:w,spotify:b,instagram:y,tiktok:m,linkedin:A,apple:W,farcaster:O,telegram:M},disablePlusEmails:o.disablePlusEmails,loginMethodsAndOrder:E,legal:{termsAndConditionsUrl:t?.legal?.termsAndConditionsUrl??o.termsAndConditionsUrl,privacyPolicyUrl:t?.legal?.privacyPolicyUrl??o.privacyPolicyUrl,requireUsersAcceptTerms:o.requireUsersAcceptTerms??!1},walletConnectCloudProjectId:t?.walletConnectCloudProjectId??o.walletConnectCloudProjectId??e.defaultClientConfig.walletConnectCloudProjectId,rpcConfig:{rpcUrls:{},rpcTimeouts:{}},chains:T,solanaClusters:{"mainnet-beta":H.find((e=>"mainnet-beta"===e.name))?.rpcUrl||i.SOLANA_MAINNET_RPC_URL,testnet:H.find((e=>"testnet"===e.name))?.rpcUrl||i.SOLANA_TESTNET_RPC_URL,devnet:H.find((e=>"devnet"===e.name))?.rpcUrl||i.SOLANA_DEVNET_RPC_URL},defaultChain:R,intl:{defaultCountry:x},shouldEnforceDefaultChainOnConnect:F,captchaEnabled:o.captchaEnabled??e.defaultClientConfig.captchaEnabled,captchaSiteKey:o.captchaSiteKey,externalWallets:{coinbaseWallet:{connectionOptions:t?.externalWallets?.coinbaseWallet?.connectionOptions??e.defaultClientConfig.externalWallets.coinbaseWallet.connectionOptions},walletConnect:{enabled:L},solana:{connectors:t?.externalWallets?.solana?.connectors}},embeddedWallets:{requireUserOwnedRecoveryOnCreate:D??(!_&&o.embeddedWalletConfig.requireUserOwnedRecoveryOnCreate),userOwnedRecoveryOptions:_?["user-passcode"]:o.embeddedWalletConfig.userOwnedRecoveryOptions,priceDisplay:{primary:"fiat-currency",secondary:"native-token"},ethereum:{createOnLogin:I??t?.embeddedWallets?.ethereum?.createOnLogin??N},solana:{createOnLogin:t?.embeddedWallets?.solana?.createOnLogin??"off"},showWalletUIs:t?.embeddedWallets?.showWalletUIs??o.enforceWalletUis??!0,extendedCalldataDecoding:t?.embeddedWallets?.extendedCalldataDecoding??!1,transactionScanning:{enabled:t?.embeddedWallets?.transactionScanning?.enabled??!1,domain:t?.embeddedWallets?.transactionScanning?.domain??c??"https://auth.privy.io"}},mfa:{methods:o.mfaMethods??[],noPromptOnMfaRequired:t?.mfa?.noPromptOnMfaRequired??!1},passkeys:{shouldUnlinkOnUnenrollMfa:t?.passkeys?.shouldUnlinkOnUnenrollMfa,shouldUnenrollMfaOnUnlink:t?.passkeys?.shouldUnenrollMfaOnUnlink},customAuth:_?{enabled:!0,...t.customAuth}:void 0,loginConfig:{telegramAuthConfiguration:o.telegramAuthConfiguration,passkeysForSignupEnabled:o.passkeysForSignupEnabled},headless:!!t?.headless,render:{standalone:t?._render?.standalone??e.defaultClientConfig._render.standalone},fundingConfig:o.fundingConfig,fundingMethodConfig:{...t?.fundingMethodConfig??e.defaultClientConfig.fundingMethodConfig,moonpay:{...t?.fundingMethodConfig?.moonpay??e.defaultClientConfig.fundingMethodConfig.moonpay,useSandbox:t?.fundingMethodConfig?.moonpay.useSandbox??t?.fiatOnRamp?.useSandbox??e.defaultClientConfig.fundingMethodConfig.moonpay.useSandbox}}}},exports.generateClientConfigAnalyticsPayload=function(e){if(!e)return{};let{appearance:n,supportedChains:a,defaultChain:o,externalWallets:t,...l}=e;return{...l,...a?{supportedChains:a.map((e=>e.id))}:void 0,...o?{defaultChain:o.id}:void 0,...t?{walletConnect:t.walletConnect,coinbaseWallet:t.coinbaseWallet,solana:{connectors:t.solana?.connectors?.get().map((e=>e.walletClientType))}}:void 0}};
