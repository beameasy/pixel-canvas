"use strict";var e=require("react");const o=/*#__PURE__*/e.createContext(void 0);let n=()=>e.useContext(o);function r(e,o,n,...r){for(let t of e.current[o][n])t(...r)}exports.PrivyEventsContext=o,exports.emitPrivyEvent=r,exports.privyEventsDefault={login:{onComplete:[],onError:[]},logout:{onSuccess:[]},connectWallet:{onSuccess:[],onError:[]},createWallet:{onSuccess:[],onError:[]},linkAccount:{onSuccess:[],onError:[]},update:{onSuccess:[],onError:[]},configureMfa:{onMfaRequired:[]},setWalletPassword:{onSuccess:[],onError:[]},setWalletRecovery:{onSuccess:[],onError:[]},signMessage:{onSuccess:[],onError:[]},signTypedData:{onSuccess:[],onError:[]},sendTransaction:{onSuccess:[],onError:[]},signTransaction:{onSuccess:[],onError:[]},signSolanaTransaction:{onSuccess:[],onError:[]},signSolanaMessage:{onSuccess:[],onError:[]},sendSolanaTransaction:{onSuccess:[],onError:[]},accessToken:{onAccessTokenGranted:[],onAccessTokenRemoved:[]},oAuthAuthorization:{onOAuthTokenGrant:[]},fundWallet:{onUserExited:[]},fundSolanaWallet:{onUserExited:[]},customAuth:{onAuthenticated:[],onUnauthenticated:[]}},exports.useEmitPrivyEvent=function(){let e=n();return(o,n,...t)=>r(e,o,n,...t)},exports.usePrivyEventSubscription=function(o,r){if(!r)return;let t=n().current[o];return e.useEffect((()=>{for(let[e,n]of Object.entries(r))Object.prototype.hasOwnProperty.call(t,e)||console.warn(`Invalid event type "${e}" for action "${o}"`),t[e]?.push(n);return()=>{for(let[e,n]of Object.entries(r))Object.prototype.hasOwnProperty.call(t,e)||console.warn(`Invalid event type "${e}" for action "${o}"`),t[e]=t[e]?.filter((e=>e!==n))}}),[r])};
