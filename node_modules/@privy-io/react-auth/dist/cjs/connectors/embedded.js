"use strict";var e=require("../svg/blobby.js"),i=require("../utils/index.js"),r=require("./ethereum/index.js");require("react/jsx-runtime"),require("./get-legacy-injected-providers.js"),require("./is-wallet-installed.js"),require("../errors.js"),require("ofetch"),require("../utils/eth/getPublicClient.js"),require("viem"),require("viem/utils"),require("../constants.js"),require("../storage.js"),require("./areWalletArraysEqual.js"),require("./isBaseConnectedEthereumWallet.js"),require("./base.js"),require("eventemitter3"),require("./getRpcTimeout.js");class t extends r.EthereumWalletConnector{async initialize(){await this.syncAccounts(),this.initialized=!0,this.emit("initialized")}async connect(e){return await this.isConnected()?(await this.proxyProvider.request({method:"wallet_switchEthereumChain",params:[i.toHex(e?.chainId||"0x1")]}),this.getConnectedWallet()):null}get walletBranding(){return{name:"Privy Wallet",icon:e.Blobby,id:"io.privy.wallet"}}disconnect(){this.connected=!1}async promptConnection(){}constructor({provider:e,chains:i,defaultChain:r,rpcConfig:t,imported:s,walletIndex:n}){super("privy",i,r,t),this.connectorType="embedded",this.proxyProvider=e,this.walletIndex=n,s&&(this.connectorType="embedded_imported"),this.subscribeListeners()}}exports.EmbeddedWalletConnector=t;
