"use strict";var e=require("@privy-io/js-sdk-core"),r=require("../errors.js");require("ofetch");class s extends r.PrivyConnectorError{constructor(){super("Wallet timeout"),this.type="wallet_error"}}class t extends r.PrivyConnectorError{constructor(){super("User rejected connection"),this.type="wallet_error"}}class o extends r.PrivyError{constructor(e,r,s){super(e),this.type="provider_error",this.code=r,this.data=s}}class i extends o{constructor(r){super(r.message,r.code,r.data);let s=Object.values(e.ProviderErrors).find((e=>e.eipCode===r.code));this.details=s||e.ProviderErrors.UNKNOWN_ERROR,-32002===r.code&&(r.message?.includes("already pending for origin")?r.message?.includes("wallet_requestPermissions")?this.details=e.ProviderErrors.E32002_CONNECTION_ALREADY_PENDING:this.details=e.ProviderErrors.E32002_REQUEST_ALREADY_PENDING:r.message?.includes("Already processing")&&r.message.includes("eth_requestAccounts")&&(this.details=e.ProviderErrors.E32002_WALLET_LOCKED))}}const n={ERROR_USER_EXISTS:{message:"User already exists for this address",detail:"Try another address!",retryable:!1},ERROR_TIMED_OUT:{message:"Wallet request timed out",detail:"Please try connecting again.",retryable:!0},ERROR_WALLET_CONNECTION:{message:"Could not log in with wallet",detail:"Please try connecting again.",retryable:!0},ERROR_USER_REJECTED_CONNECTION:{message:"You rejected the request",detail:"Please try connecting again.",retryable:!0},ERROR_USER_LIMIT_REACHED:{message:"Unable to link",detail:"You've reached the maximum number of linked wallets.",retryable:!1},...e.ProviderErrors};exports.ConnectorErrors=n,exports.PrivyProviderRpcError=i,exports.ProviderRpcError=o,exports.UserRejectedConnectionError=t,exports.WalletTimeoutError=s,exports.formatConnectorError=e=>e instanceof r.PrivyConnectorError?e:e?.code?new i(e):new r.PrivyConnectorError("Unknown connector error",e);
