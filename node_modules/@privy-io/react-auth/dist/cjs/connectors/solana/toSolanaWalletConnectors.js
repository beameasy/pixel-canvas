"use strict";var e=require("@solana/wallet-adapter-base"),r=require("@solana/wallet-standard-wallet-adapter-base"),t=require("@wallet-standard/app"),a=require("./index.js");require("../../hooks/index.js"),require("../base.js"),require("eventemitter3"),require("../errors.js"),require("@privy-io/js-sdk-core"),require("../../errors.js"),require("ofetch"),require("../stored-connection.js"),require("../../constants.js"),require("../../storage.js");let n=t=>t.filter(e.isWalletAdapterCompatibleStandardWallet).map((e=>new r.StandardWalletAdapter({wallet:e})));exports.toSolanaWalletConnectors=e=>{let r,{get:o,on:l}=t.getWallets(),s=e?.shouldAutoConnect??!0,i=[],u=[];function d(...e){u=(i=i.concat(...n(e))).map((e=>new a.SolanaWalletConnector(e,s))),r?.(u)}function p(...e){u=(i=i.filter((r=>e.some((e=>r.wallet===e))))).map((e=>new a.SolanaWalletConnector(e,s))),r?.(u)}let c=[l("register",d),l("unregister",p)];return u=(i=n(o())).map((e=>new a.SolanaWalletConnector(e,s))),{_setOnConnectorsUpdated:e=>{r=e},onMount:()=>{c[0]||(c[0]=l("register",d)),c[1]||(c[1]=l("unregister",p))},onUnmount:()=>{let e=c.pop();for(;e;)e(),e=c.pop()},get:()=>u}};
