import{jsxs as o,Fragment as e,jsx as r}from"react/jsx-runtime";import{ModalScreen as t}from"./index.mjs";import{useState as s,useRef as n,useEffect as i}from"react";import{styled as c}from"styled-components";import{PrimaryButton as a}from"../components/Button.mjs";import{FixedGappedContainer as m}from"../components/Layouts.mjs";import{ConnectionLoader as l}from"../components/Loader.mjs";import{ModalFooter as p}from"../components/ModalFooter.mjs";import{ModalHeader as u}from"../components/ModalHeader.mjs";import h from"../components/layout/StackedContainer.mjs";import{DEFAULT_SUCCESS_SCREEN_DURATION_MS as d}from"../constants.mjs";import{PrivyError as j,PrivyErrorCode as f}from"../errors.mjs";import{usePrivyInternal as y}from"../hooks/internal-context.mjs";import{usePrivyModal as g}from"../hooks/modal-context.mjs";import{usePrivyContext as v}from"../hooks/privy-context.mjs";import{shouldProceedtoEmbeddedWalletCreationFlow as k}from"../lib/user/shouldProceedtoEmbeddedWalletCreationFlow.mjs";import{FingerPrint as w}from"../svg/fingerprint.mjs";import"../configuration/context.mjs";import"../config.mjs";import"../configuration/defaultClientConfig.mjs";import"../configuration/login-methods.mjs";import"../configuration/wallets.mjs";import"../connectors/chains/index.mjs";import"../connectors/chains/arbitrum.mjs";import"../connectors/chains/arbitrumSepolia.mjs";import"../connectors/chains/avalanche.mjs";import"../connectors/chains/avalancheFuji.mjs";import"../connectors/chains/base.mjs";import"../connectors/chains/baseSepolia.mjs";import"../connectors/chains/berachainArtio.mjs";import"../connectors/chains/celo.mjs";import"../connectors/chains/celoAlfajores.mjs";import"../connectors/chains/filecoin.mjs";import"../connectors/chains/filecoinCalibration.mjs";import"../connectors/chains/garnetHolesky.mjs";import"../connectors/chains/holesky.mjs";import"../connectors/chains/linea.mjs";import"../connectors/chains/lineaTestnet.mjs";import"../connectors/chains/lukso.mjs";import"../connectors/chains/mainnet.mjs";import"../connectors/chains/optimism.mjs";import"../connectors/chains/optimismSepolia.mjs";import"../connectors/chains/polygon.mjs";import"../connectors/chains/polygonAmoy.mjs";import"../connectors/chains/redstone.mjs";import"../connectors/chains/sepolia.mjs";import"../connectors/chains/zora.mjs";import"../connectors/chains/zoraSepolia.mjs";import"../connectors/chains/zoraTestnet.mjs";import"../connectors/chains/utils.mjs";import"../lib/solana/index.mjs";import"../theme.mjs";import"tinycolor2";import"../lib/cybr53.mjs";import"../svg/protected-by-privy.mjs";import"@heroicons/react/24/outline/ArrowLeftIcon";import"@heroicons/react/24/outline/ArrowRightIcon";import"@heroicons/react/24/outline/QuestionMarkCircleIcon";import"@heroicons/react/24/outline/XMarkIcon";import"../hooks/index.mjs";import"ofetch";import"../components/PrefetchedImage.mjs";import"../lib/user/shouldCreateEmbeddedEthWallet.mjs";import"../client/user.mjs";import"viem/utils";import"../lib/user/shouldCreateEmbeddedSolWallet.mjs";const C=()=>{let{app:c,lastScreen:C,currentScreen:E,navigateBack:S,data:x,setModalData:A,navigate:_}=g(),{loginWithPasskey:T,signupWithPasskey:N,closePrivyModal:I,createAnalyticsEvent:O}=y(),{user:P,logout:W}=v(),{passkeySignupFlow:M}=x?.passkeyAuthModalData??{},F=d-500,[L,D]=s("loading"),[R,Y]=s(null),z=n([]),B=o=>{z.current=[o,...z.current]};i((()=>()=>{z.current.forEach((o=>clearTimeout(o))),z.current=[]}),[]);let q=async()=>{D("loading");try{M?await N():await T(),D("success")}catch(o){Y(o),D("error")}};return i((()=>{if("success"===L&&P){if(c?.legal.requireUsersAcceptTerms&&!P.hasAcceptedTerms)return void B(setTimeout((()=>{_(t.AFFIRMATIVE_CONSENT_SCREEN)}),F));if(!k(P,c?.embeddedWallets))return void B(setTimeout((()=>{I({shouldCallAuthOnSuccess:!0,isSuccess:!0})}),d));B(setTimeout((()=>{A({createWallet:{onSuccess:()=>{},onFailure:o=>{console.error(o),O({eventName:"embedded_wallet_creation_failure_logout",payload:{error:o,screen:"PasskeyStatusScreen"}}),W()},callAuthOnSuccessOnClose:!0}}),_(t.EMBEDDED_WALLET_ON_ACCOUNT_CREATE_SCREEN)}),F))}}),[P,L]),i((()=>{q()}),[]),/*#__PURE__*/o(e,{children:[/*#__PURE__*/r(u,{backFn:C&&E!==C?S:void 0}),/*#__PURE__*/o(b,{children:[/*#__PURE__*/r(h,{children:/*#__PURE__*/o("div",{children:[/*#__PURE__*/r(l,{success:"success"===L,fail:"error"===L}),/*#__PURE__*/r(w,{style:{width:"38px",height:"38px"}})]})}),/*#__PURE__*/o(m,{children:[/*#__PURE__*/r("h3",{children:(()=>{switch(L){case"loading":return"Waiting for passkey";case"success":return"Success";case"error":return"Something went wrong"}})()}),/*#__PURE__*/r("p",{style:{whiteSpace:"pre-wrap"},children:(()=>{switch(L){case"loading":return M?"Please follow prompts to register your passkey.":"Please follow prompts to verify your passkey.\nYou will have to sign up with another method first to register a passkey for your account.";case"success":return"You've successfully logged in with your passkey.";case"error":if(R instanceof j){if(R.privyErrorCode===f.CANNOT_LINK_MORE_OF_TYPE)return"Cannot link more passkeys to account.";if(R.privyErrorCode===f.PASSKEY_NOT_ALLOWED)return"Passkey request timed out or rejected by user.\nYou will have to sign up with another method first to register a passkey for your account."}return"An unknown error occurred.\nYou will have to sign up with another method first to register a passkey for your account."}})()})]}),(()=>{switch(L){case"loading":case"success":/*#__PURE__*/return r(a,{onClick:()=>{},disabled:!0,children:"Continue"});case"error":/*#__PURE__*/return r(a,{onClick:q,disabled:!1,children:"Retry"})}})()]}),/*#__PURE__*/r(p,{})]})};let b=/*#__PURE__*/c.div.withConfig({displayName:"Container",componentId:"sc-d3724da1-0"})(["display:flex;flex-direction:column;align-items:center;justify-content:center;gap:24px;width:100%;"]);const E=/*#__PURE__*/c.div.withConfig({displayName:"DoubleIconWrapper",componentId:"sc-d3724da1-1"})(["display:flex;align-items:center;justify-content:center;width:180px;height:90px;border-radius:50%;svg + svg{margin-left:12px;}> svg{z-index:2;color:var(--privy-color-accent) !important;stroke:var(--privy-color-accent) !important;fill:var(--privy-color-accent) !important;}"]);export{E as DoubleIconWrapper,C as PasskeyStatusScreen};
