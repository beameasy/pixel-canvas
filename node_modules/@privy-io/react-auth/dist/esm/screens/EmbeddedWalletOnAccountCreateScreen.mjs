import{jsxs as o,Fragment as e,jsx as t}from"react/jsx-runtime";import r from"@heroicons/react/24/solid/XCircleIcon";import{useState as i,useEffect as s}from"react";import{styled as n}from"styled-components";import{getPrivyPrimaryWallet as c,getEntropyDetailsFromAccount as m,getPrivyEthereumWallet as a,getPrivySolanaWallet as l}from"../client/user.mjs";import{PrimaryButton as p}from"../components/Button.mjs";import{CenteredItemWithGap as d}from"../components/Layouts.mjs";import{ModalHeader as h}from"../components/ModalHeader.mjs";import{CenteredScreenHeader as j}from"../components/ScreenHeader.mjs";import{FullScreenLoadingSpinner as u}from"../components/primitives/LoadingSpinner/index.mjs";import{useAppConfig as f}from"../configuration/context.mjs";import{RunEffectOnce as E}from"../effect.mjs";import{PrivyEmbeddedWalletError as y,PrivyClientError as w}from"../errors.mjs";import{usePrivyInternal as g}from"../hooks/internal-context.mjs";import{usePrivyModal as v}from"../hooks/modal-context.mjs";import{usePrivyContext as b}from"../hooks/privy-context.mjs";import{useCreateWallet as C}from"../hooks/useEmbeddedWalletCreate.mjs";import{toEmbeddedWalletSetRecoveryScreen as A}from"../lib/embeddedWalletRecovery.mjs";import{shouldCreateEmbeddedEthWallet as S}from"../lib/user/shouldCreateEmbeddedEthWallet.mjs";import{shouldCreateEmbeddedSolWallet as D}from"../lib/user/shouldCreateEmbeddedSolWallet.mjs";import{ModalScreen as k}from"./index.mjs";import"viem/utils";import"../components/Loader.mjs";import"@heroicons/react/24/outline/ArrowLeftIcon";import"@heroicons/react/24/outline/ArrowRightIcon";import"@heroicons/react/24/outline/QuestionMarkCircleIcon";import"@heroicons/react/24/outline/XMarkIcon";import"../config.mjs";import"../configuration/defaultClientConfig.mjs";import"../constants.mjs";import"../configuration/login-methods.mjs";import"../configuration/wallets.mjs";import"../connectors/chains/index.mjs";import"../connectors/chains/arbitrum.mjs";import"../connectors/chains/arbitrumSepolia.mjs";import"../connectors/chains/avalanche.mjs";import"../connectors/chains/avalancheFuji.mjs";import"../connectors/chains/base.mjs";import"../connectors/chains/baseSepolia.mjs";import"../connectors/chains/berachainArtio.mjs";import"../connectors/chains/celo.mjs";import"../connectors/chains/celoAlfajores.mjs";import"../connectors/chains/filecoin.mjs";import"../connectors/chains/filecoinCalibration.mjs";import"../connectors/chains/garnetHolesky.mjs";import"../connectors/chains/holesky.mjs";import"../connectors/chains/linea.mjs";import"../connectors/chains/lineaTestnet.mjs";import"../connectors/chains/lukso.mjs";import"../connectors/chains/mainnet.mjs";import"../connectors/chains/optimism.mjs";import"../connectors/chains/optimismSepolia.mjs";import"../connectors/chains/polygon.mjs";import"../connectors/chains/polygonAmoy.mjs";import"../connectors/chains/redstone.mjs";import"../connectors/chains/sepolia.mjs";import"../connectors/chains/zora.mjs";import"../connectors/chains/zoraSepolia.mjs";import"../connectors/chains/zoraTestnet.mjs";import"../connectors/chains/utils.mjs";import"../lib/solana/index.mjs";import"../theme.mjs";import"tinycolor2";import"../lib/cybr53.mjs";import"../hooks/index.mjs";import"ofetch";import"../components/PrefetchedImage.mjs";import"../paths.mjs";import"../lib/pkce.mjs";import"jose";import"../crypto.mjs";import"../storage.mjs";const x=()=>{let{app:n,setModalData:x,navigate:W,data:L,onUserCloseViaDialogOrKeybindRef:T}=v(),[I,_]=i(""),{embeddedWallets:M}=f(),{authenticated:O,user:P,getAccessToken:N}=b(),{closePrivyModal:B,walletProxy:U,refreshSessionAndUser:F,recoverPrimaryWallet:z}=g(),{onSuccess:H,onFailure:V,callAuthOnSuccessOnClose:X}=L.createWallet,q=!0===n?.embeddedWallets.requireUserOwnedRecoveryOnCreate,{createWallet:G}=C(),[K,Q]=i(null),J=new E((async()=>{let o=await N();if(P&&o&&U)try{let e=c(P);if(e&&"privy"===e.recoveryMethod)await z();else if(e){let{entropyId:t,entropyIdVerifier:r}=m(e);try{if(!await U.connect({accessToken:o,entropyId:t,entropyIdVerifier:r}))throw new w("Primary wallet not connected.")}catch(o){return Q(e),void W(k.EMBEDDED_WALLET_CREATED_SCREEN)}}let t=S(P,n.embeddedWallets.ethereum.createOnLogin),r=D(P,n.embeddedWallets.solana.createOnLogin);if(t&&r){let e=await G({user:P});if(await U.createSolana({accessToken:o,ethereumAddress:e?.address}),!e)return;return Q(e),void W(k.EMBEDDED_WALLET_CREATED_SCREEN)}if(r){await U.createSolana({accessToken:o,ethereumAddress:a(P)?.address});let e=await F();return Q(l(e)),void W(k.EMBEDDED_WALLET_CREATED_SCREEN)}if(t){let o=await G({user:P});if(!o)return;Q(o),W(k.EMBEDDED_WALLET_CREATED_SCREEN)}}catch(o){_(o.message)}}));return s((()=>O&&P?q?(x({...L,recoverySelection:{...L?.recoverySelection,isInAccountCreateFlow:!0}}),W(A({walletAction:"create",showAutomaticRecovery:!1,availableRecoveryMethods:M.userOwnedRecoveryOptions,legacySetWalletPasswordFlow:!1,isResettingPassword:!1}))):void J.execute():(W(k.LANDING),void V(Error("User must be authenticated before creating a Privy wallet")))),[q,O]),T.current=()=>null,I?/*#__PURE__*/o(e,{children:[/*#__PURE__*/t(h,{closeable:!1}),/*#__PURE__*/o(d,{children:[/*#__PURE__*/t(r,{fill:"var(--privy-color-error)",width:"64px",height:"64px"}),/*#__PURE__*/t(j,{title:"Something went wrong",description:I})]}),/*#__PURE__*/t(p,{onClick:()=>{K?(H(K),B({shouldCallAuthOnSuccess:X})):(V(new y("User wallet creation failed")),B({shouldCallAuthOnSuccess:!1}))},children:"Close"}),/*#__PURE__*/t(R,{})]}):/*#__PURE__*/t(u,{})};let R=/*#__PURE__*/n.div.withConfig({displayName:"BottomSpacing",componentId:"sc-f34e977e-0"})(["height:44px;"]);export{x as EmbeddedWalletOnAccountCreateScreen};
