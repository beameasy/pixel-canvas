import{jsx as o,jsxs as t,Fragment as e}from"react/jsx-runtime";import{useState as n,useEffect as r}from"react";import{isMobile as i}from"react-device-detect";import{styled as s}from"styled-components";import{PrimaryButton as m}from"../components/Button.mjs";import{FixedGappedContainer as c}from"../components/Layouts.mjs";import{ModalFooter as a}from"../components/ModalFooter.mjs";import{ModalHeader as l}from"../components/ModalHeader.mjs";import{ConnectorErrors as p}from"../connectors/errors.mjs";import{DEFAULT_SUCCESS_SCREEN_DURATION_MS as j}from"../constants.mjs";import{usePrivyInternal as d}from"../hooks/internal-context.mjs";import{usePrivyModal as h}from"../hooks/modal-context.mjs";import{WALLET_UI_MAP as u}from"../lib/external-wallets/displayHelpers.mjs";import{BrowserExtensionWallet as g}from"../svg/browser-extension-wallet-icon.mjs";import{WalletLoading as w,getErrorDetails as f}from"./ConnectionStatusScreen.mjs";import"../components/Loader.mjs";import"../configuration/context.mjs";import"../config.mjs";import"../configuration/defaultClientConfig.mjs";import"../configuration/login-methods.mjs";import"../configuration/wallets.mjs";import"../connectors/chains/index.mjs";import"../connectors/chains/arbitrum.mjs";import"../connectors/chains/arbitrumSepolia.mjs";import"../connectors/chains/avalanche.mjs";import"../connectors/chains/avalancheFuji.mjs";import"../connectors/chains/base.mjs";import"../connectors/chains/baseSepolia.mjs";import"../connectors/chains/berachainArtio.mjs";import"../connectors/chains/celo.mjs";import"../connectors/chains/celoAlfajores.mjs";import"../connectors/chains/filecoin.mjs";import"../connectors/chains/filecoinCalibration.mjs";import"../connectors/chains/garnetHolesky.mjs";import"../connectors/chains/holesky.mjs";import"../connectors/chains/linea.mjs";import"../connectors/chains/lineaTestnet.mjs";import"../connectors/chains/lukso.mjs";import"../connectors/chains/mainnet.mjs";import"../connectors/chains/optimism.mjs";import"../connectors/chains/optimismSepolia.mjs";import"../connectors/chains/polygon.mjs";import"../connectors/chains/polygonAmoy.mjs";import"../connectors/chains/redstone.mjs";import"../connectors/chains/sepolia.mjs";import"../connectors/chains/zora.mjs";import"../connectors/chains/zoraSepolia.mjs";import"../connectors/chains/zoraTestnet.mjs";import"../connectors/chains/utils.mjs";import"../lib/solana/index.mjs";import"../theme.mjs";import"tinycolor2";import"../lib/cybr53.mjs";import"../svg/protected-by-privy.mjs";import"@heroicons/react/24/outline/ArrowLeftIcon";import"@heroicons/react/24/outline/ArrowRightIcon";import"@heroicons/react/24/outline/QuestionMarkCircleIcon";import"@heroicons/react/24/outline/XMarkIcon";import"../hooks/index.mjs";import"@privy-io/js-sdk-core";import"../errors.mjs";import"ofetch";import"../components/PrefetchedImage.mjs";import"./index.mjs";import"../svg/backpack.mjs";import"../svg/brave-browser-icon.mjs";import"../svg/bybit.mjs";import"../svg/coinbase-wallet.mjs";import"../svg/cryptocom.mjs";import"../svg/metamask.mjs";import"../svg/okx-wallet.mjs";import"../svg/phantom.mjs";import"../svg/rabby.mjs";import"../svg/rainbow.mjs";import"../svg/safe.mjs";import"../svg/solflare.mjs";import"../svg/uniswap.mjs";import"../svg/universal-profile.mjs";import"../svg/wallet-connect.mjs";import"../svg/zerion.mjs";import"../auth-flows/siwe.mjs";import"../effect.mjs";import"../lib/siwe.mjs";import"../auth-flows/siws.mjs";import"../lib/siws.mjs";import"../connectors/is-wallet-installed.mjs";import"../connectors/get-legacy-injected-providers.mjs";import"../connectors/userAlreadyHasConnectedCoinbaseWallet.mjs";import"viem";import"../connectors/walletconnect-v2.mjs";import"@walletconnect/ethereum-provider";import"../utils/index.mjs";import"../utils/eth/getPublicClient.mjs";import"../connectors/ethereum/index.mjs";import"viem/utils";import"../storage.mjs";import"../connectors/areWalletArraysEqual.mjs";import"../connectors/isBaseConnectedEthereumWallet.mjs";import"../connectors/base.mjs";import"eventemitter3";import"../connectors/getRpcTimeout.mjs";import"../connectors/privyProxyProvider.mjs";import"../connectors/walletconnect-registry.mjs";import"../hook-utils/useInterval.mjs";import"../hooks/captcha-context.mjs";import"../hooks/privy-context.mjs";import"../lib/useHasTabbedAway.mjs";import"../lib/user/shouldProceedtoEmbeddedWalletCreationFlow.mjs";import"../lib/user/shouldCreateEmbeddedEthWallet.mjs";import"../client/user.mjs";import"../lib/user/shouldCreateEmbeddedSolWallet.mjs";const v=()=>{let s,{navigateBack:v,navigate:y,lastScreen:k,currentScreen:C,data:x,setModalData:S}=h(),{walletConnectionStatus:T,closePrivyModal:E}=d(),[W,A]=n(void 0),[I,M]=n(0),R="connected"===T?.status,_="switching_to_supported_chain"===T?.status;r((()=>{if(R){let o;if(x?.externalConnectWallet?.onCompleteNavigateTo){let t=x.externalConnectWallet.onCompleteNavigateTo,e=T.connectedWallet?.address;o=setTimeout((()=>{x.funding&&S({...x,funding:{...x.funding,connectedWalletAddress:e}}),y(t({walletChainType:T.connector?.chainType}))}),j)}else o=setTimeout(E,j);return()=>clearTimeout(o)}}),[R]);r((()=>{var o;T?.connectError&&(o=T?.connectError,A(f(o)))}),[T]);let B=T?.connector?.connectorType||"injected",P=T?.connector?.walletClientType||"unknown",F=u[P]?.displayName||T?.connector?.walletBranding.name||"Browser Extension",H=u[P]?.logo||T?.connector?.walletBranding.icon||(t=>/*#__PURE__*/o(g,{...t})),L="Browser Extension"===F?F.toLowerCase():F;s=R?`Successfully connected with ${L}`:W?W.message:_?"Switching networks":`Waiting for ${L}`;let z="Don’t see your wallet? Check your other browser windows.";return R?z="You’re good to go!":I>=2&&W?z="Unable to connect wallet":W?z=W.detail:_?z="Switch your wallet to the requested network.":"metamask"===P&&i?z="Click to continue to open and connect MetaMask.":"metamask"===P?z="For the best experience, connect only one wallet at a time.":"wallet_connect_v2"===B?z="Open your mobile wallet app to continue":"coinbase_wallet"===B&&(z="Open the Coinbase app on your phone to continue."),/*#__PURE__*/t(e,{children:[/*#__PURE__*/o(l,{backFn:C===k?void 0:v}),/*#__PURE__*/t(b,{children:[/*#__PURE__*/o(w,{walletLogo:H,success:R,fail:!!W}),/*#__PURE__*/t(c,{children:[/*#__PURE__*/o("h3",{children:s}),/*#__PURE__*/o("p",{children:z})]}),W==p.ERROR_USER_EXISTS?/*#__PURE__*/o(m,{onClick:v,children:"Use a different wallet"}):!R&&W?.retryable&&I<2?/*#__PURE__*/o(m,{onClick:()=>{M(I+1),A(void 0),T?.connectRetry()},disabled:!R&&(!W?.retryable||I>=2),children:"Retry"}):!R&&W&&I>=2?/*#__PURE__*/o(m,{onClick:v,children:"Use a different wallet"}):null]}),/*#__PURE__*/o(a,{})]})};let b=/*#__PURE__*/s.div.withConfig({displayName:"ConnectContainer",componentId:"sc-1346f57-0"})(["display:flex;flex-direction:column;align-items:center;justify-content:center;gap:24px;width:100%;"]);export{v as ConnectOnlyStatusScreen};
