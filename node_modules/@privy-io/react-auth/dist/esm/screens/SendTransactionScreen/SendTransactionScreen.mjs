import{jsx as o}from"react/jsx-runtime";import{useState as n,useMemo as t,useEffect as e}from"react";import{formatEther as i}from"viem";import{ProviderErrors as s}from"@privy-io/js-sdk-core";import{useAppConfig as r}from"../../configuration/context.mjs";import{PrivyProviderRpcError as a,ProviderRpcError as c}from"../../connectors/errors.mjs";import{DEFAULT_SUCCESS_SCREEN_DURATION_MS as m}from"../../constants.mjs";import{sendTransaction as l}from"../../embedded-wallets/rpc/index.mjs";import{usePrivyInternal as p}from"../../hooks/internal-context.mjs";import{usePrivyModal as d}from"../../hooks/modal-context.mjs";import{usePrivyContext as u}from"../../hooks/privy-context.mjs";import{useGetTokenPrice as h}from"../../hooks/useGetTokenPrice.mjs";import{useWalletBalance as j}from"../../hooks/useWalletBalance.mjs";import{getErc20TokenInfo as f}from"../../lib/erc20/actions/getErc20TokenInfo.mjs";import{formatErc20TokenAmount as g}from"../../lib/erc20/formatErc20TokenAmount.mjs";import{getNativeCurrencyFromWei as b,getDollarsFromWei as T,parseNativeCurrencyFromWei as y}from"../../lib/ethers.mjs";import{formatWalletAddress as I}from"../../utils/index.mjs";import{getPublicClient as v}from"../../utils/eth/getPublicClient.mjs";import{ErrorScreenView as S}from"../ErrorScreen.mjs";import{ModalScreen as k}from"../index.mjs";import w from"./ScanDetails.mjs";import{SendTransactionScreenView as C}from"./SendTransactionScreenView.mjs";import{TransactionErrorView as E}from"./TransactionErrorView.mjs";import{TransactionReceiptView as x}from"./TransactionReceiptView.mjs";import{getStaticTransactionMetadata as A}from"./getStaticTransactionMetadata.mjs";import{parseTokenDescriptions as D}from"./lib.mjs";import{usePrepareTransaction as R}from"./usePrepareTransaction.mjs";import"../../config.mjs";import"../../configuration/defaultClientConfig.mjs";import"../../configuration/login-methods.mjs";import"../../configuration/wallets.mjs";import"../../connectors/chains/index.mjs";import"../../connectors/chains/arbitrum.mjs";import"../../connectors/chains/arbitrumSepolia.mjs";import"../../connectors/chains/avalanche.mjs";import"../../connectors/chains/avalancheFuji.mjs";import"../../connectors/chains/base.mjs";import"../../connectors/chains/baseSepolia.mjs";import"../../connectors/chains/berachainArtio.mjs";import"../../connectors/chains/celo.mjs";import"../../connectors/chains/celoAlfajores.mjs";import"../../connectors/chains/filecoin.mjs";import"../../connectors/chains/filecoinCalibration.mjs";import"../../connectors/chains/garnetHolesky.mjs";import"../../connectors/chains/holesky.mjs";import"../../connectors/chains/linea.mjs";import"../../connectors/chains/lineaTestnet.mjs";import"../../connectors/chains/lukso.mjs";import"../../connectors/chains/mainnet.mjs";import"../../connectors/chains/optimism.mjs";import"../../connectors/chains/optimismSepolia.mjs";import"../../connectors/chains/polygon.mjs";import"../../connectors/chains/polygonAmoy.mjs";import"../../connectors/chains/redstone.mjs";import"../../connectors/chains/sepolia.mjs";import"../../connectors/chains/zora.mjs";import"../../connectors/chains/zoraSepolia.mjs";import"../../connectors/chains/zoraTestnet.mjs";import"../../connectors/chains/utils.mjs";import"../../lib/solana/index.mjs";import"../../theme.mjs";import"tinycolor2";import"../../lib/cybr53.mjs";import"../../errors.mjs";import"ofetch";import"../../hooks/index.mjs";import"../../components/PrefetchedImage.mjs";import"../../hooks/useGetSolPrice.mjs";import"../../connectors/get-legacy-injected-providers.mjs";import"../../connectors/is-wallet-installed.mjs";import"@heroicons/react/24/outline/ExclamationTriangleIcon";import"@heroicons/react/24/outline/PhoneIcon";import"styled-components";import"../../components/Button.mjs";import"../../components/Loader.mjs";import"../../components/CircleBorder.mjs";import"../../components/ModalHeader.mjs";import"@heroicons/react/24/outline/ArrowLeftIcon";import"@heroicons/react/24/outline/ArrowRightIcon";import"@heroicons/react/24/outline/QuestionMarkCircleIcon";import"@heroicons/react/24/outline/XMarkIcon";import"../../components/layout/StackedContainer.mjs";import"../../embedded-wallets/errors.mjs";import"../../embedded-wallets/types.mjs";import"../../hooks/captcha-context.mjs";import"../../lib/funding/reservoir.mjs";import"../../svg/lock-closed.mjs";import"../../components/ModalFooter.mjs";import"../../svg/protected-by-privy.mjs";import"../../components/primitives/JsonTree.mjs";import"@heroicons/react/24/outline";import"../../components/primitives/InteractiveLabel.mjs";import"../../components/ui/typography/LabelSm.mjs";import"../../components/ui/layout/Row.mjs";import"../../components/ui/typography/ErrorMessage.mjs";import"../../components/ui/typography/Subtitle.mjs";import"../../components/ui/typography/Title.mjs";import"../../components/ui/typography/Value.mjs";import"../../components/ui/animation/LoadingSkeleton.mjs";import"../../components/ui/wallet/Address.mjs";import"@heroicons/react/24/outline/CheckIcon";import"@heroicons/react/24/outline/Square2StackIcon";import"../../components/ui/wallet/WalletInfoCard.mjs";import"../../components/ui/chips/Chip.mjs";import"../../components/ui/layout/Column.mjs";import"../../components/ui/typography/LabelXs.mjs";import"../../components/ui/wallet/shared.mjs";import"../LandingScreen/styles.mjs";import"./TokenDescription.mjs";import"./TransactionDetail.mjs";import"./TransactionValidation.mjs";import"../../components/Checkbox.mjs";import"../../components/Pill.mjs";import"./useTransactionDetails.mjs";import"@heroicons/react/24/outline/ClipboardDocumentCheckIcon";import"@heroicons/react/24/outline/ClipboardDocumentIcon";import"@heroicons/react/24/outline/ExclamationCircleIcon";import"../../components/Layouts.mjs";import"../../components/ScreenHeader.mjs";import"../../components/embedded-wallets/TransactionDetails.mjs";import"../../components/embedded-wallets/DisplayInfoItem.mjs";import"../../components/embedded-wallets/PriceDisplay.mjs";import"../../lib/solana/transaction.mjs";import"../../utils/buffer/readBigInt64LE.mjs";import"../../lib/attempt.mjs";import"../../components/embedded-wallets/TransactionTotal.mjs";import"../../components/primitives/Accordion/index.mjs";import"@heroicons/react/24/outline/ChevronDownIcon";import"../../components/primitives/Accordion/AccordionContext.mjs";import"../../components/embedded-wallets/WalletLink.mjs";import"../../lib/deployAccount/actions/abis/deployAccount.mjs";import"../../lib/erc20/actions/abis/approve.mjs";import"../../lib/erc20/actions/abis/transfer.mjs";import"../../lib/erc721/actions/abis/mint.mjs";import"../../lib/erc721/actions/abis/safeTransferFrom.mjs";import"../../lib/erc721/actions/abis/setApprovalForAll.mjs";import"../../lib/erc721/actions/abis/transferFrom.mjs";import"../../lib/erc1155/actions/abis/safeBatchTransferFrom.mjs";import"../../lib/erc1155/actions/abis/safeTransferFrom.mjs";import"../../lib/viem/prepareTransactionRequest.mjs";import"../../lib/viem/toViemTransactionSerializable.mjs";let O=new a(new c("There was an issue preparing your transaction",s.E32603_DEFAULT_INTERNAL_ERROR.eipCode)),P=(o,n)=>o?.sendTransaction?"transactionRequest"in o.sendTransaction?o.sendTransaction.transactionRequest:o.sendTransaction.transactionRequests[n]:void 0;const F=()=>{let{data:F,onUserCloseViaDialogOrKeybindRef:L,setModalData:_,navigate:q}=d(),{rpcConfig:B,chains:M,closePrivyModal:N,walletProxy:W,client:V}=p(),{getAccessToken:H,user:U}=u(),G=r(),[$,z]=n(0),J=(Eo=F,Eo?.sendTransaction?"transactionRequest"in Eo.sendTransaction?0:Eo.sendTransaction.transactionRequests.length-1:0),[Q,X]=n(P(F,$)),[K,Y]=n(null),[Z,oo]=n(),[no,to]=n(!1),[eo,io]=n(null),[so,ro]=n(null),[ao,co]=n(null),[mo,lo]=n(void 0),[po,uo]=n(void 0),[ho,jo]=n(!1),[fo,go]=n(!1),[bo,To]=n([]),[yo,Io]=n([]),[vo,So]=n(!1),[ko,wo]=n(void 0),Co="fiat-currency"===G.embeddedWallets.priceDisplay.primary;var Eo;if(!Q||!F?.sendTransaction||!F?.sendTransaction.transactingWallet)/*#__PURE__*/return o(S,{error:Error("Invalid transaction request"),onClick:()=>{F?.sendTransaction?.onFailure(O),N({shouldCallAuthOnSuccess:!1})}});let{entropyId:xo,entropyIdVerifier:Ao,transactingWallet:Do}=F.sendTransaction,Ro=t((()=>M.find((o=>Number(o.id)===Number(Q.chainId)))),[Q.chainId]),Oo=Ro?.nativeCurrency.symbol??"ETH",Po=t((()=>A(Q.data,!!G.embeddedWallets.extendedCalldataDecoding)),[Q.data]),{action:Fo,isErc20Ish:Lo,isNFTIsh:_o}=Po,{toAddress:qo,tokenAddress:Bo}=t((()=>({toAddress:Po.isErc20Ish?Po.transferTo:Q.to??void 0,tokenAddress:Po.isErc20Ish?Q.to:void 0})),[Po]);e((()=>{Q.to&&Ro&&Lo&&f({address:Q.to,chain:Ro,rpcConfig:G.rpcConfig,privyAppId:G.id}).then(Y).catch(console.error)}),[Q.to,Ro]);let{tokenPrice:Mo,isTokenPriceLoading:No}=h(Q.chainId),{balance:Wo}=j({rpcConfig:G.rpcConfig,appId:G.id,address:Do.address,chain:Ro}),Vo=t((()=>v(Number(Q.chainId),M,B,{appId:G.id})),[Q.chainId,B]),Ho=R(Q,Do,Vo);e((()=>{X(P(F,$))}),[$]),e((()=>{F.sendTransaction?.getIsSponsored?F.sendTransaction.getIsSponsored().then(oo).catch(console.error):oo(!1)}),[F.sendTransaction.getIsSponsored]);let Uo=()=>{if(!no)return eo?F?.sendTransaction?.onSuccess({hash:eo}):ao||Ho?.errors[0]?F?.sendTransaction?.onFailure(ao??Ho?.errors[0]??O):F?.sendTransaction?.onFailure(new a(new c("The user rejected the request",s.E4001_USER_REJECTED_REQUEST.eipCode))),N({shouldCallAuthOnSuccess:!1})};L.current=Uo;let Go=!!(F.funding&&F.funding.supportedOptions.length>0),$o=b(BigInt(Ho?.totalGasEstimate??0n),Oo),zo=Co&&Mo?T(BigInt(Ho?.totalGasEstimate??0n),Mo):void 0,Jo=b(Wo??0n,Oo,void 0,!0),Qo=Co&&Mo?T(Wo??0n,Mo):void 0,Xo=F.sendTransaction?.uiOptions?.transactionInfo?.title;Xo||(Xo="approve"===Fo?Lo?"Confirm address":"Confirm action":`Approve ${Fo}`);let Ko=F.sendTransaction?.uiOptions?.description||(Lo&&"approve"===Fo?`${G.name} would like your permission for ${I(Po.spender)} to spend tokens on your behalf.`:`${G.name} wants your permission to approve the following transaction.`),Yo=F.sendTransaction?.uiOptions?.transactionInfo?.contractInfo?.imgUrl?/*#__PURE__*/o("img",{src:F.sendTransaction.uiOptions.transactionInfo.contractInfo.imgUrl,alt:F.sendTransaction.uiOptions.transactionInfo.contractInfo.imgAltText}):null,Zo=!(!Ho||Ho.errors[0]||Ho.hasFunds||!1!==Z),on=Zo&&Go,nn=on?"Add funds":F.sendTransaction?.uiOptions?.buttonText||($<J?"Continue":"Approve");if(e((()=>{let o=(o,n,t)=>{if(n.isErc20Ish&&n.amount&&t)wo(g({amount:n.amount,decimals:t.decimals})),To([{value:ko,symbol:t?.symbol}]);else if(o.value){let n=BigInt(o.value),t=Mo&&T(n,Mo);To(Co&&t?[{value:t}]:[{value:y(n),symbol:Oo}])}else To(Co?[{value:"$0"}]:[{value:"0",symbol:Oo}])},n=Ho?.tx??Q;G.embeddedWallets.transactionScanning.enabled&&n?(So(!0),(async o=>{if(V)return await V.scanTransaction({metadata:{domain:G.embeddedWallets.transactionScanning.domain},chain_id:o.chainId.toString(),request:{method:"eth_sendTransaction",params:[{from:o.from,to:o.to,value:o.value?.toString(),gas:o.gas?.toString(),gasPrice:o.gasPrice?.toString(),nonce:o.nonce?.toString(),data:o.data}]}})})(n).then((o=>{if(!o)throw Error("Transaction scan failed");if("Success"===o.validation.status&&("Benign"===o.validation.result_type?uo("safe"):"Warning"===o.validation.result_type?uo("warn"):"Malicious"===o.validation.result_type&&(uo("error"),go(!0))),"Success"!==o.simulation.status)throw Error("Simulation failed");{lo(o.simulation.params);let{assetsIn:n,assetsOut:t}=D(o.simulation.assets_diffs,o.simulation.exposures);if(0===t.length&&0===n.length)throw Error("No tokens found");To(t),Io(n)}So(!1)})).catch((()=>{So(!1),o(n,Po,K)}))):o(n,Po,K)}),[Q,Ho?.tx,Po,K]),so/*#__PURE__*/)return o(x,{txn:Ho?.tx??Q,onClose:Uo,receipt:so,transactionInfo:F.sendTransaction?.uiOptions.transactionInfo,tokenPrice:Mo,tokenSymbol:Oo,receiptHeader:F.sendTransaction?.uiOptions.successHeader,receiptDescription:F.sendTransaction?.uiOptions.successDescription});if(ao)/*#__PURE__*/return o(E,{transactionError:ao,transactionHash:eo??void 0,network:"ethereum",chainId:Ho?.tx.chainId??Q.chainId,onClose:Uo,onRetry:({resetNonce:o})=>{co(null);let n={...Ho?.tx??Q};o&&(n.nonce=void 0),X(n)}});let tn=0!==J&&"number"==typeof $&&0!==$?()=>{z($-1)}:void 0;return ho&&mo?/*#__PURE__*/o(w,{details:mo,onBack:()=>jo(!1)}):/*#__PURE__*/o(C,{transactionIndex:$,onBack:tn,maxIndex:J,disabled:Zo&&!Go||fo,isSubmitting:no,submitError:ao,isPreparing:!Ho,isTokenPriceLoading:No,isTokenContractInfoLoading:!_o&&!K,prepareError:Ho?.errors[0],symbol:K?.symbol,chain:Ro,img:Yo,title:Xo,subtitle:Ko,txValue:Q.value,fee:zo??$o,isSponsored:Z,from:Do?.address??"",to:qo,tokenAddress:Bo??void 0,network:G.chains.find((o=>o.id===Q.chainId))?.name??"",transactionDetails:{...Po,formattedAmount:ko},cta:nn,missingFunds:Zo,action:Fo,balance:Qo??Jo,onClose:Uo,onClick:on?async()=>{if(!Do)return;if(!Go)throw Error("Funding wallet is not enabled");let o=k.FUNDING_METHOD_SELECTION_SCREEN;_({...F,funding:{...F.funding,methodScreen:o,chainType:"ethereum",amount:i(BigInt(Ho?.tx.value??0)+BigInt(Ho?.totalGasEstimate?.toString()??0)),chain:Ro}}),q(o)}:async()=>{if($<J)z($+1);else{to(!0);try{let o=await H();if(no||!o||!Do||!W||!U)return;let n=F?.sendTransaction?.onConfirm?await F.sendTransaction.onConfirm():await l({accessToken:o,transactingWallet:Do,entropyId:xo,entropyIdVerifier:Ao,walletProxy:W,transactionRequest:Ho?.tx??Q,publicClient:Vo,requesterAppId:F.sendTransaction?.requesterAppId});if(io(n),F.sendTransaction?.signOnly)return await new Promise((o=>setTimeout(o,m))),F?.sendTransaction?.onSuccess({hash:n}),N({shouldCallAuthOnSuccess:!1});let t=await Vo.waitForTransactionReceipt({hash:n});if("reverted"===t.status)throw Error("Transaction failed");ro(t)}catch(o){console.warn({transaction:Ho?.tx??Q,error:o}),co(o)}finally{to(!1)}}},validation:po,hasScanDetails:!!mo,setIsScanDetailsOpen:jo,preventMaliciousTransaction:fo,setPreventMaliciousTransaction:go,tokensSent:bo,tokensReceived:yo,isScanning:vo,isCancellable:F.sendTransaction?.uiOptions?.isCancellable??!1})};export{F as SendTransactionScreen};
