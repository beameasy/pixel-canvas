import{jsx as e,jsxs as o,Fragment as t}from"react/jsx-runtime";import{useState as n,useEffect as r}from"react";import{isMobile as i}from"react-device-detect";import{styled as s}from"styled-components";import{SiweFlow as c}from"../auth-flows/siwe.mjs";import{SiwsFlow as a}from"../auth-flows/siws.mjs";import{PrimaryButton as l}from"../components/Button.mjs";import{FixedGappedContainer as m}from"../components/Layouts.mjs";import{ConnectionLoader as p}from"../components/Loader.mjs";import{ModalFooter as d}from"../components/ModalFooter.mjs";import{ModalHeader as h}from"../components/ModalHeader.mjs";import{ConnectorErrors as u,PrivyProviderRpcError as j,WalletTimeoutError as f,UserRejectedConnectionError as g}from"../connectors/errors.mjs";import{isCoinbaseWalletInstalled as E}from"../connectors/is-wallet-installed.mjs";import{userAlreadyHasConnectedCoinbaseWallet as w}from"../connectors/userAlreadyHasConnectedCoinbaseWallet.mjs";import{WalletConnectV2WalletConnector as y}from"../connectors/walletconnect-v2.mjs";import{DEFAULT_SUCCESS_SCREEN_DURATION_MS as C}from"../constants.mjs";import{PrivyErrorCode as b,PrivyUserLimitReachedError as v}from"../errors.mjs";import _ from"../hook-utils/useInterval.mjs";import{useCaptcha as T}from"../hooks/captcha-context.mjs";import{usePrivyInternal as R}from"../hooks/internal-context.mjs";import{usePrivyModal as S}from"../hooks/modal-context.mjs";import{usePrivyContext as k}from"../hooks/privy-context.mjs";import{WALLET_UI_MAP as N}from"../lib/external-wallets/displayHelpers.mjs";import{useHasTabbedAway as A}from"../lib/useHasTabbedAway.mjs";import{shouldProceedtoEmbeddedWalletCreationFlow as x}from"../lib/user/shouldProceedtoEmbeddedWalletCreationFlow.mjs";import{BrowserExtensionWallet as O}from"../svg/browser-extension-wallet-icon.mjs";import{sleep as I}from"../utils/index.mjs";import{ModalScreen as W}from"./index.mjs";import"../effect.mjs";import"../lib/siwe.mjs";import"../lib/siws.mjs";import"../configuration/context.mjs";import"../config.mjs";import"../configuration/defaultClientConfig.mjs";import"../configuration/login-methods.mjs";import"../configuration/wallets.mjs";import"../connectors/chains/index.mjs";import"../connectors/chains/arbitrum.mjs";import"../connectors/chains/arbitrumSepolia.mjs";import"../connectors/chains/avalanche.mjs";import"../connectors/chains/avalancheFuji.mjs";import"../connectors/chains/base.mjs";import"../connectors/chains/baseSepolia.mjs";import"../connectors/chains/berachainArtio.mjs";import"../connectors/chains/celo.mjs";import"../connectors/chains/celoAlfajores.mjs";import"../connectors/chains/filecoin.mjs";import"../connectors/chains/filecoinCalibration.mjs";import"../connectors/chains/garnetHolesky.mjs";import"../connectors/chains/holesky.mjs";import"../connectors/chains/linea.mjs";import"../connectors/chains/lineaTestnet.mjs";import"../connectors/chains/lukso.mjs";import"../connectors/chains/mainnet.mjs";import"../connectors/chains/optimism.mjs";import"../connectors/chains/optimismSepolia.mjs";import"../connectors/chains/polygon.mjs";import"../connectors/chains/polygonAmoy.mjs";import"../connectors/chains/redstone.mjs";import"../connectors/chains/sepolia.mjs";import"../connectors/chains/zora.mjs";import"../connectors/chains/zoraSepolia.mjs";import"../connectors/chains/zoraTestnet.mjs";import"../connectors/chains/utils.mjs";import"../lib/solana/index.mjs";import"../theme.mjs";import"tinycolor2";import"../lib/cybr53.mjs";import"../svg/protected-by-privy.mjs";import"@heroicons/react/24/outline/ArrowLeftIcon";import"@heroicons/react/24/outline/ArrowRightIcon";import"@heroicons/react/24/outline/QuestionMarkCircleIcon";import"@heroicons/react/24/outline/XMarkIcon";import"@privy-io/js-sdk-core";import"../connectors/get-legacy-injected-providers.mjs";import"viem";import"@walletconnect/ethereum-provider";import"../svg/metamask.mjs";import"../svg/wallet-connect.mjs";import"../connectors/ethereum/index.mjs";import"viem/utils";import"../storage.mjs";import"../connectors/areWalletArraysEqual.mjs";import"../connectors/isBaseConnectedEthereumWallet.mjs";import"../connectors/base.mjs";import"eventemitter3";import"../connectors/getRpcTimeout.mjs";import"../connectors/privyProxyProvider.mjs";import"../connectors/walletconnect-registry.mjs";import"ofetch";import"../hooks/index.mjs";import"../components/PrefetchedImage.mjs";import"../svg/backpack.mjs";import"../svg/brave-browser-icon.mjs";import"../svg/bybit.mjs";import"../svg/coinbase-wallet.mjs";import"../svg/cryptocom.mjs";import"../svg/okx-wallet.mjs";import"../svg/phantom.mjs";import"../svg/rabby.mjs";import"../svg/rainbow.mjs";import"../svg/safe.mjs";import"../svg/solflare.mjs";import"../svg/uniswap.mjs";import"../svg/universal-profile.mjs";import"../svg/zerion.mjs";import"../lib/user/shouldCreateEmbeddedEthWallet.mjs";import"../client/user.mjs";import"../lib/user/shouldCreateEmbeddedSolWallet.mjs";import"../utils/eth/getPublicClient.mjs";const L=e=>e?.privyErrorCode===b.LINKED_TO_ANOTHER_USER?u.ERROR_USER_EXISTS:e instanceof j&&!e.details.default?e.details:e instanceof f?u.ERROR_TIMED_OUT:e instanceof g?u.ERROR_USER_REJECTED_CONNECTION:e?.privyErrorCode===b.CANNOT_LINK_MORE_OF_TYPE?u.ERROR_USER_LIMIT_REACHED:u.ERROR_WALLET_CONNECTION,U=()=>{let s,[p,j]=n(!1),[f,g]=n(!1),[U,D]=n(void 0),{authenticated:H,logout:B}=k(),{app:P,navigate:z,navigateBack:X,lastScreen:q,currentScreen:J,setModalData:K,data:$}=S(),{getAuthFlow:Q,walletConnectionStatus:Y,closePrivyModal:G,initLoginWithWallet:V,loginWithWallet:Z,updateWallets:ee,createAnalyticsEvent:oe}=R(),{walletConnectors:te}=k(),[ne,re]=n(0),{user:ie}=k(),[se]=n(ie?.linkedAccounts.length||0),[ce,ae]=n(""),[le,me]=n(""),[pe,de]=n(!1),{hasTabbedAway:he}=A(),{enabled:ue,token:je}=T(),fe=i&&"wallet_connect_v2"===Y?.connector?.connectorType||i&&"coinbase_wallet"===Y?.connector?.connectorType||i&&"injected"===Y?.connector?.connectorType&&"phantom"===Y?.connector?.walletClientType,ge="connected"===Y?.status,Ee="switching_to_supported_chain"===Y?.status;r((()=>{let e=Q(),o=e instanceof c||e instanceof a?e:void 0;ge&&!o&&(!ue||je||H?V(Y.connectedWallet,je,$?.login?.disableSignup).then((()=>{de(!0)})):(K({captchaModalData:{callback:e=>V(Y.connectedWallet,e,$?.login?.disableSignup).then((()=>{de(!0)})),userIntentRequired:!1,onSuccessNavigateTo:W.AWAITING_CONNECTION,onErrorNavigateTo:W.ERROR_SCREEN}}),z(W.CAPTCHA_SCREEN,!1))),o&&fe&&ge&&!o.preparedMessage?o.buildMessage():o&&!fe&&ge&&(f||(async()=>{g(!0),D(void 0);try{"wallet_connect_v2"===Y?.connector?.connectorType&&"metamask"===Y?.connector?.walletClientType&&await I(2500),await ye()}catch(e){console.warn("Auto-prompted signature failed",e)}finally{g(!1)}})())}),[ne,ge,pe]),r((()=>{if(ie&&p){let e=C-500;if(P?.legal.requireUsersAcceptTerms&&!ie.hasAcceptedTerms){let o=setTimeout((()=>{z(W.AFFIRMATIVE_CONSENT_SCREEN)}),e);return()=>clearTimeout(o)}if(x(ie,P.embeddedWallets)){let o=setTimeout((()=>{K({createWallet:{onSuccess:()=>{},onFailure:e=>{console.error(e),oe({eventName:"embedded_wallet_creation_failure_logout",payload:{error:e,screen:"ConnectionStatusScreen"}}),B()},callAuthOnSuccessOnClose:!0}}),z(W.EMBEDDED_WALLET_ON_ACCOUNT_CREATE_SCREEN)}),e);return()=>clearTimeout(o)}ee();let o=setTimeout((()=>G({shouldCallAuthOnSuccess:!0,isSuccess:!0})),C);return()=>clearTimeout(o)}}),[ie,p]);let we=e=>{if(e?.privyErrorCode!==b.ALLOWLIST_REJECTED){if(e?.privyErrorCode===b.USER_LIMIT_REACHED)return console.error(new v(e).toString()),void z(W.USER_LIMIT_REACHED_SCREEN);if(e?.privyErrorCode!==b.USER_DOES_NOT_EXIST)return e?.privyErrorCode===b.ACCOUNT_TRANSFER_REQUIRED&&e.data?.data?.nonce?(K({accountTransfer:{nonce:e.data?.data?.nonce,account:Q()?.meta.address,displayName:e.data?.data?.account?.displayName,externalWalletMetadata:{walletClientType:Q()?.meta.walletClientType,chainId:Q()?.meta.chainId,connectorType:Q()?.meta.connectorType},linkMethod:"siwe",embeddedWalletAddress:e.data?.data?.otherUser?.embeddedWalletAddress}}),void z(W.LINK_CONFLICT_SCREEN)):void D(L(e));z(W.ACCOUNT_NOT_FOUND_SCREEN)}else z(W.ALLOWLIST_REJECTION_SCREEN)};async function ye(){try{await Z(),j(!0)}catch(e){we(e)}finally{g(!1)}}r((()=>{Y?.connectError&&we(Y?.connectError)}),[Y]),_((()=>{let e="wallet_connect_v2"===Ce&&Y?.connector instanceof y?Y.connector.redirectUri:void 0;e&&ae(e);let o="wallet_connect_v2"===Ce&&Y?.connector instanceof y?Y.connector.fallbackUniversalRedirectUri:void 0;o&&me(o)}),Y?.connector instanceof y&&!ce?500:null);let Ce=Y?.connector?.connectorType||"injected",be=Y?.connector?.walletClientType||"unknown",ve=N[be]?.displayName||Y?.connector?.walletBranding.name||"Browser Extension",_e=N[be]?.logo||Y?.connector?.walletBranding.icon||(o=>/*#__PURE__*/e(O,{...o})),Te="Browser Extension"===ve?ve.toLowerCase():ve;s=p?`Successfully connected with ${Te}`:U?U.message:Ee?"Switching networks":ge?f&&fe?"Signing":"Sign to verify":`Waiting for ${Te}`;let Re="Don’t see your wallet? Check your other browser windows.";p?Re=se===(ie?.linkedAccounts.length||0)?"Wallet was already linked.":"You’re good to go!":ne>=2&&U?Re="Unable to connect wallet":U?Re=U.detail:Ee?Re="Switch your wallet to the requested network.":ge&&fe?Re="Sign the message in your wallet to verify it belongs to you.":"metamask"===be&&i?Re="Click continue to open and connect MetaMask.":"metamask"===be?Re="For the best experience, connect only one wallet at a time.":"wallet_connect"===Ce?Re="Open your mobile wallet app to continue":"coinbase_wallet"!==Ce||E()||(Re=w(ie)?"Continue with the Coinbase app. Not the right wallet? Reset your connection below.":"Open the Coinbase app on your phone to continue.");let Se=te?.walletConnectors?.find((e=>"coinbase_wallet"===e.walletClientType)),ke="coinbase_wallet"===be&&(w(ie)||U===u.ERROR_USER_EXISTS);/*#__PURE__*/return o(t,{children:[/*#__PURE__*/e(h,{backFn:q&&J!==q?X:void 0}),/*#__PURE__*/o(M,{children:[/*#__PURE__*/e(F,{walletLogo:_e,success:p,fail:!!U}),/*#__PURE__*/o(m,{children:[/*#__PURE__*/e("h3",{children:s}),/*#__PURE__*/e("p",{children:Re}),ge||!ce||he?null:/*#__PURE__*/o("p",{children:["Still here?"," ",/*#__PURE__*/e("a",{href:ce,target:"_blank",style:{textDecoration:"underline"},children:"Try connecting again"}),le&&/*#__PURE__*/o(t,{children:[" ","or"," ",/*#__PURE__*/e("a",{href:le,target:"_blank",style:{textDecoration:"underline"},children:"use this different link"})]})]})]}),ke?/*#__PURE__*/e(l,{onClick:()=>Se&&Se?.disconnect(),disabled:p,children:"Use a different wallet"}):U==u.ERROR_USER_EXISTS&&J!==q?/*#__PURE__*/e(l,{onClick:X,children:"Use a different wallet"}):ge&&!p&&fe?/*#__PURE__*/e(l,{onClick:()=>{g(!0),ye()},disabled:f,children:f?"Signing":"Sign with your wallet"}):!p&&U?.retryable&&ne<2?/*#__PURE__*/e(l,{onClick:()=>{re(ne+1),D(void 0),ge?(g(!0),ye()):Y?.connectRetry()},disabled:!p&&(!U?.retryable||ne>=2),children:"Retry"}):p||U?null:/*#__PURE__*/e(l,{onClick:()=>{},disabled:!0,children:"Connecting"})]}),/*#__PURE__*/e(d,{})]})};let M=/*#__PURE__*/s.div.withConfig({displayName:"ConnectContainer",componentId:"sc-17f85963-0"})(["display:flex;flex-direction:column;align-items:center;justify-content:center;gap:24px;width:100%;"]),D=/*#__PURE__*/s.div.withConfig({displayName:"StackedContainer",componentId:"sc-17f85963-1"})(["display:flex;flex-direction:column;justify-content:center;align-items:center;width:100%;height:82px;> div{position:relative;}> div > span{position:absolute;left:-41px;top:-41px;}> div > :last-child{position:absolute;left:-19px;top:-19px;}"]);const F=n=>{let r=n.walletLogo;/*#__PURE__*/return e(t,{children:/*#__PURE__*/e(D,{children:/*#__PURE__*/o("div",{children:[/*#__PURE__*/e(p,{success:n.success,fail:n.fail}),"string"==typeof r?
/*#__PURE__*/e("span",{style:{background:`url('${r}')`,height:"38px",width:"38px",borderRadius:"6px",margin:"auto",backgroundSize:"cover"}}):/*#__PURE__*/e(r,{style:{width:"38px",height:"38px"}})]})})})};export{U as ConnectionStatusScreen,F as WalletLoading,L as getErrorDetails};
