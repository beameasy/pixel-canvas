import{jsx as o}from"react/jsx-runtime";import{useState as n,useMemo as t,useEffect as e}from"react";import{formatUnits as r}from"viem";import{SolanaClient as i}from"@privy-io/js-sdk-core";import{getImportedPrivySolanaWallet as s,getPrivyPrimaryWallet as a,getSolanaSigningAndRootWallet as c,getEntropyDetailsFromAccount as m}from"../../client/user.mjs";import{useAppConfig as l}from"../../configuration/context.mjs";import{signSolanaTransaction as p,sendSolanaTransaction as d}from"../../embedded-wallets/solana/transaction.mjs";import{usePrivyInternal as u}from"../../hooks/internal-context.mjs";import{usePrivyModal as f}from"../../hooks/modal-context.mjs";import{usePrivyContext as h}from"../../hooks/privy-context.mjs";import{useGetSolPrice as j}from"../../hooks/useGetSolPrice.mjs";import{getSolanaNetworkFromRpcEndpoint as g}from"../../lib/solana/index.mjs";import{getNativeCurrencyFromLamports as y,parseSolanaTransaction as k,isVersionedTransaction as S,getDollarsFromLamport as b,createSolanaTransactionReceipt as w}from"../../lib/solana/transaction.mjs";import{ErrorScreenView as T}from"../ErrorScreen.mjs";import{SendSolanaTransactionScreenView as I}from"../SendTransactionScreen/SendTransactionScreenView.mjs";import{TransactionErrorView as v}from"../SendTransactionScreen/TransactionErrorView.mjs";import{ModalScreen as A}from"../index.mjs";import{SolanaTransactionReceiptView as x}from"./SolanaTransactionReceiptView.mjs";import"viem/utils";import"../../config.mjs";import"../../configuration/defaultClientConfig.mjs";import"../../constants.mjs";import"../../configuration/login-methods.mjs";import"../../configuration/wallets.mjs";import"../../connectors/chains/index.mjs";import"../../connectors/chains/arbitrum.mjs";import"../../connectors/chains/arbitrumSepolia.mjs";import"../../connectors/chains/avalanche.mjs";import"../../connectors/chains/avalancheFuji.mjs";import"../../connectors/chains/base.mjs";import"../../connectors/chains/baseSepolia.mjs";import"../../connectors/chains/berachainArtio.mjs";import"../../connectors/chains/celo.mjs";import"../../connectors/chains/celoAlfajores.mjs";import"../../connectors/chains/filecoin.mjs";import"../../connectors/chains/filecoinCalibration.mjs";import"../../connectors/chains/garnetHolesky.mjs";import"../../connectors/chains/holesky.mjs";import"../../connectors/chains/linea.mjs";import"../../connectors/chains/lineaTestnet.mjs";import"../../connectors/chains/lukso.mjs";import"../../connectors/chains/mainnet.mjs";import"../../connectors/chains/optimism.mjs";import"../../connectors/chains/optimismSepolia.mjs";import"../../connectors/chains/polygon.mjs";import"../../connectors/chains/polygonAmoy.mjs";import"../../connectors/chains/redstone.mjs";import"../../connectors/chains/sepolia.mjs";import"../../connectors/chains/zora.mjs";import"../../connectors/chains/zoraSepolia.mjs";import"../../connectors/chains/zoraTestnet.mjs";import"../../connectors/chains/utils.mjs";import"../../theme.mjs";import"tinycolor2";import"../../lib/cybr53.mjs";import"../../utils/buffer/readBigInt64LE.mjs";import"../../lib/attempt.mjs";import"../../hooks/index.mjs";import"../../components/PrefetchedImage.mjs";import"@heroicons/react/24/outline/ExclamationTriangleIcon";import"@heroicons/react/24/outline/PhoneIcon";import"styled-components";import"../../components/Button.mjs";import"../../components/Loader.mjs";import"../../components/CircleBorder.mjs";import"../../components/ModalHeader.mjs";import"@heroicons/react/24/outline/ArrowLeftIcon";import"@heroicons/react/24/outline/ArrowRightIcon";import"@heroicons/react/24/outline/QuestionMarkCircleIcon";import"@heroicons/react/24/outline/XMarkIcon";import"../../components/layout/StackedContainer.mjs";import"../../embedded-wallets/errors.mjs";import"../../embedded-wallets/types.mjs";import"../../errors.mjs";import"ofetch";import"../../hooks/captcha-context.mjs";import"../../utils/index.mjs";import"../../connectors/get-legacy-injected-providers.mjs";import"../../connectors/is-wallet-installed.mjs";import"../../utils/eth/getPublicClient.mjs";import"../../lib/funding/reservoir.mjs";import"../../svg/lock-closed.mjs";import"@heroicons/react/24/outline";import"../../components/ModalFooter.mjs";import"../../svg/protected-by-privy.mjs";import"../../components/primitives/InteractiveLabel.mjs";import"../../components/ui/typography/LabelSm.mjs";import"../../components/ui/layout/Row.mjs";import"../../components/ui/typography/ErrorMessage.mjs";import"../../components/ui/typography/Subtitle.mjs";import"../../components/ui/typography/Title.mjs";import"../../components/ui/typography/Value.mjs";import"../../components/ui/animation/LoadingSkeleton.mjs";import"../../components/ui/wallet/Address.mjs";import"@heroicons/react/24/outline/CheckIcon";import"@heroicons/react/24/outline/Square2StackIcon";import"../../components/ui/wallet/WalletInfoCard.mjs";import"../../components/ui/chips/Chip.mjs";import"../../components/ui/layout/Column.mjs";import"../../components/ui/typography/LabelXs.mjs";import"../../components/ui/wallet/shared.mjs";import"../LandingScreen/styles.mjs";import"../SendTransactionScreen/TokenDescription.mjs";import"../SendTransactionScreen/TransactionDetail.mjs";import"../SendTransactionScreen/TransactionValidation.mjs";import"../../components/Checkbox.mjs";import"../../components/Pill.mjs";import"../SendTransactionScreen/useTransactionDetails.mjs";import"@heroicons/react/24/outline/ClipboardDocumentCheckIcon";import"@heroicons/react/24/outline/ClipboardDocumentIcon";import"@heroicons/react/24/outline/ExclamationCircleIcon";import"@heroicons/react/24/outline/CheckCircleIcon";import"../../components/CircleBackground.mjs";import"../../components/Layouts.mjs";import"../../components/ScreenHeader.mjs";import"../../components/embedded-wallets/SolanaTransactionDetails.mjs";import"@heroicons/react/24/outline/ChevronDownIcon";import"../../components/embedded-wallets/PriceDisplay.mjs";import"../../lib/ethers.mjs";import"../../components/embedded-wallets/WalletLink.mjs";const C=()=>{let{data:C,onUserCloseViaDialogOrKeybindRef:O,setModalData:E,navigate:L}=f(),{client:D,closePrivyModal:P,walletProxy:W}=u(),B=l(),{user:M,getAccessToken:V}=h(),[F,R]=n(C?.sendSolanaTransaction?.transactionRequest),[U,H]=n(),[N,$]=n(),[q,z]=n(0),[_,G]=n({value:0n,isLoading:!1}),[X,K]=n(!1),[Q,J]=n(),[Y,Z]=n(),oo=C?.sendSolanaTransaction?.connection,no=C?.sendSolanaTransaction?.transactingWallet,to=C?.sendSolanaTransaction?.signOnly??!1,eo=U?.instructions.length??1,ro=no?.imported?s(M):a(M),io=g(oo?.rpcEndpoint||""),so="fiat-currency"===B.embeddedWallets.priceDisplay.primary,{solPrice:ao,isSolPriceLoading:co}=j({enabled:so}),mo=t((()=>{let o,n;if(!U)return;let t=U.spender;0===q&&no?.address===t&&(o=y(U.fee));let e=y(_.value,3,!0),i=U.instructions[q];if(!i)return{fee:o,spender:t,balance:e};if("unknown"===i.type)return{fee:o,spender:t,program:i.program,balance:e};if("ata-creation"===i.type)return{fee:o,spender:t,balance:e,tokenAccountOwner:i.owner,tokenAccount:i.ata,tokenAddress:i.mint};let s=i.fromAccount,a="sol-transfer"===i.type?i.toAccount:i.toAccount||i.toAta,c="spl-transfer"===i.type?i.token.address:void 0;return null!=o&&"SOL"===i.token.symbol&&(n=y(i.value+U.fee)),{fee:o,spender:t,from:s,to:a,tokenAddress:c,amount:`${r(i.value,i.token.decimals)} ${i.token.symbol}`.trim(),total:n,balance:e}}),[U,q,no?.address,_]),lo=t((()=>{let o,n;if(!U||!so||!ao||co)return;function t(...o){return b(o.reduce(((o,n)=>o+n),0n),ao??0)}0===q&&no?.address===U.spender&&(o=t(U.fee));let e=t(_.value),i=U.instructions[q];return i&&"unknown"!==i.type&&"ata-creation"!==i.type?(null!=o&&"SOL"===i.token.symbol&&(n=t(i.value,U.fee)),{fee:o,amount:"SOL"===i.token.symbol?t(i.value):`${r(i.value,i.token.decimals)} ${i.token.symbol}`.trim(),total:n,balance:e}):{fee:o,balance:e}}),[U,so,ao,co,no?.address,q,_]),po=t((()=>{if(to||!U||_.isLoading||q>0)return!1;let o=U.instructions[q];if(!o)return!1;let n=0n;return no?.address===U.spender&&(n+=U.fee),"value"in o&&no?.address===o.fromAccount&&"SOL"===o.token.symbol&&(n+=o.value),_.value<n}),[U,_,q,to]);if(e((()=>{!async function(){if(F&&oo&&D)try{$(void 0);let o=await k({tx:F,connection:oo,client:D});H(o),z(0)}catch(o){console.error("Failed to prepare transaction",o),$(o)}}()}),[F,oo,D]),e((()=>{(async function(){if(!no||!oo)return;G({value:_.value,isLoading:!0});let o=new i({name:"mainnet-beta",rpcUrl:oo.rpcEndpoint});G({value:await o.getBalance(no.address).catch((()=>0n))??0n,isLoading:!1})})().catch(console.error)}),[U,oo]),!(F&&C?.sendSolanaTransaction&&no&&oo)){let n=Error("Invalid transaction request");/*#__PURE__*/return o(T,{error:n,onClick:()=>{C?.sendSolanaTransaction?.onFailure(n),P({shouldCallAuthOnSuccess:!1})}})}let uo=()=>{if(!X)return Q?C?.sendSolanaTransaction?.onSuccess(Q):(C?.sendSolanaTransaction?.onFailure(Y??N??Error("User exited the modal before submitting the transaction")),z(0)),P({shouldCallAuthOnSuccess:!1})};O.current=uo;let fo=C.sendSolanaTransaction?.uiOptions?.transactionInfo?.contractInfo?.imgUrl?/*#__PURE__*/o("img",{src:C.sendSolanaTransaction.uiOptions.transactionInfo.contractInfo.imgUrl,alt:C.sendSolanaTransaction.uiOptions.transactionInfo.contractInfo.imgAltText}):null,ho=!!(C.funding&&C.funding.supportedOptions.length>0),jo=po&&ho;return Q?/*#__PURE__*/o(x,{instructions:U?.instructions.reduce(((o,n)=>("ata-creation"===n.type&&o.push({tokenAccountOwner:n.owner,tokenAccount:n.ata}),"spl-transfer"===n.type&&o.push({from:n.fromAccount,to:n.toAccount||n.toAta,amount:n.value,token:n.token}),"sol-transfer"===n.type&&o.push({from:n.fromAccount,to:n.toAccount,amount:n.value,token:n.token}),o)),[])??[],fees:0===q?Q.fees:0n,onClose:uo,transactionInfo:C.sendSolanaTransaction?.uiOptions.transactionInfo,solPrice:ao,receiptHeader:C.sendSolanaTransaction?.uiOptions.successHeader,receiptDescription:C.sendSolanaTransaction?.uiOptions.successDescription,rpcEndpoint:oo.rpcEndpoint,signOnly:to}):Y?/*#__PURE__*/o(v,{transactionError:Y,connection:oo,onClose:uo,network:"solana",onRetry:async()=>{Z(void 0);let{blockhash:o}=await oo.getLatestBlockhash();S(F)?F.message.recentBlockhash=o:F.recentBlockhash=o,R(F)}}):/*#__PURE__*/o(I,{img:fo,title:C.sendSolanaTransaction?.uiOptions?.transactionInfo?.title||"Confirm transaction",subtitle:C.sendSolanaTransaction?.uiOptions?.description||`${B.name} wants your permission to approve the following transaction.`,cta:jo?"Add funds":C.sendSolanaTransaction?.uiOptions?.buttonText||"Approve",transactionIndex:q,maxIndex:eo-1,network:"mainnet-beta"==io?"Solana":io,blockExplorerUrl:"https://explorer.solana.com",total:so?lo?.total:mo?.total,amount:so?lo?.amount:mo?.amount,fee:so?lo?.fee:mo?.fee,balance:so?lo?.balance:mo?.balance,from:mo?.from,to:mo?.to,tokenAccount:mo?.tokenAccount,tokenAccountOwner:mo?.tokenAccountOwner,tokenAddress:mo?.tokenAddress,transactingWalletAddress:no.address,programAddress:mo?.program,disabled:po&&!ho,isSubmitting:X,isPreparing:!U||_.isLoading,isTokenPriceLoading:so&&co,isMissingFunds:po,submitError:Y??void 0,parseError:N,onClick:jo?async()=>{if(!no)return;if(!ho)throw Error("Funding wallet is not enabled");let o=A.FUNDING_METHOD_SELECTION_SCREEN;E({...C,funding:{...C.funding,methodScreen:o}}),L(o)}:async()=>{if(q<(U?.instructions.length??1)-1)z(q+1);else try{K(!0);let o=await V();if(X||!o||!no||!W||!M||!ro)return;let{rootWallet:n}=c(M,no.address);if(!n)throw Error("No root wallet for transacting wallet found");let{entropyId:t,entropyIdVerifier:e}=m(n);if(to)await p({tx:F,accessToken:o,walletProxy:W,entropyId:t,entropyIdVerifier:e,transactingWalletAddress:no.address,transactingWalletIndex:no.walletIndex??0}),J(w("",F,null));else{let{signature:n,receipt:r}=await d({tx:F,accessToken:o,connection:oo,walletProxy:W,entropyId:t,entropyIdVerifier:e,transactingWalletAddress:no.address,transactingWalletIndex:no.walletIndex??0,transactionOptions:C.sendSolanaTransaction?.transactionOptions});J(w(n,F,r))}}catch(o){console.warn({transaction:F,error:o}),Z(o)}finally{K(!1)}},onClose:uo,onBack:q>0&&eo>1?()=>z(q-1):void 0})};export{C as SendSolanaTransactionScreen};
