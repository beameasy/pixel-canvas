import{jsxs as o,Fragment as t,jsx as n}from"react/jsx-runtime";import e from"@heroicons/react/24/outline/CheckCircleIcon";import{useState as i,useRef as s,useEffect as r}from"react";import{formatUnits as m}from"viem";import{RefactorSpacerTop as a,CenteredItemWithGap as c,RefactorSpacerBottom as l}from"../../components/Layouts.mjs";import{BlobbyFooter as p}from"../../components/ModalFooter.mjs";import{CenteredScreenHeader as u}from"../../components/ScreenHeader.mjs";import d from"../../components/embedded-wallets/FundWalletMethodHeader.mjs";import{NeutralSpinner as j}from"../../components/primitives/NeutralSpinner/index.mjs";import{DEFAULT_SUCCESS_SCREEN_EXTRA_LONG_DURATION_MS as h}from"../../constants.mjs";import{PrivyClientError as f,PrivyErrorCode as g}from"../../errors.mjs";import{usePrivyInternal as v}from"../../hooks/internal-context.mjs";import{usePrivyModal as y}from"../../hooks/modal-context.mjs";import{useGetTokenPrice as w}from"../../hooks/useGetTokenPrice.mjs";import{toDisplayName as I}from"../../lib/external-wallets/displayHelpers.mjs";import{ON_RAMP_COMPLETE_ANALYTICS_EVENT as b}from"../../lib/funding/analytics.mjs";import{getSolanaRpcEndpointForCluster as T}from"../../lib/solana/index.mjs";import{getSolanaFormattedAmounts as S}from"../../lib/solana/transaction.mjs";import{usePlugins as k}from"../../plugins/context/PrivyPluginContext.mjs";import{SOLANA_FUNDING_PLUGIN_ID as A}from"../../plugins/solana-funding/id.mjs";import{formatWalletAddress as C}from"../../utils/index.mjs";import{ModalScreen as N}from"../index.mjs";import{TransferOrBridgeLoadingScreen as x}from"./TransferOrBridgeLoadingScreen.mjs";import{useSolanaWallets as E}from"../../hooks/solana/useSolanaWallets.mjs";import"styled-components";import"../../configuration/context.mjs";import"../../config.mjs";import"../../configuration/defaultClientConfig.mjs";import"../../configuration/login-methods.mjs";import"../../configuration/wallets.mjs";import"../../connectors/chains/index.mjs";import"../../connectors/chains/arbitrum.mjs";import"../../connectors/chains/arbitrumSepolia.mjs";import"../../connectors/chains/avalanche.mjs";import"../../connectors/chains/avalancheFuji.mjs";import"../../connectors/chains/base.mjs";import"../../connectors/chains/baseSepolia.mjs";import"../../connectors/chains/berachainArtio.mjs";import"../../connectors/chains/celo.mjs";import"../../connectors/chains/celoAlfajores.mjs";import"../../connectors/chains/filecoin.mjs";import"../../connectors/chains/filecoinCalibration.mjs";import"../../connectors/chains/garnetHolesky.mjs";import"../../connectors/chains/holesky.mjs";import"../../connectors/chains/linea.mjs";import"../../connectors/chains/lineaTestnet.mjs";import"../../connectors/chains/lukso.mjs";import"../../connectors/chains/mainnet.mjs";import"../../connectors/chains/optimism.mjs";import"../../connectors/chains/optimismSepolia.mjs";import"../../connectors/chains/polygon.mjs";import"../../connectors/chains/polygonAmoy.mjs";import"../../connectors/chains/redstone.mjs";import"../../connectors/chains/sepolia.mjs";import"../../connectors/chains/zora.mjs";import"../../connectors/chains/zoraSepolia.mjs";import"../../connectors/chains/zoraTestnet.mjs";import"../../connectors/chains/utils.mjs";import"../../theme.mjs";import"tinycolor2";import"../../lib/cybr53.mjs";import"../../svg/protected-by-privy.mjs";import"../../components/ModalHeader.mjs";import"@heroicons/react/24/outline/ArrowLeftIcon";import"@heroicons/react/24/outline/ArrowRightIcon";import"@heroicons/react/24/outline/QuestionMarkCircleIcon";import"@heroicons/react/24/outline/XMarkIcon";import"../../hooks/index.mjs";import"ofetch";import"../../components/PrefetchedImage.mjs";import"../../hooks/useGetSolPrice.mjs";import"../../svg/backpack.mjs";import"../../svg/brave-browser-icon.mjs";import"../../svg/bybit.mjs";import"../../svg/coinbase-wallet.mjs";import"../../svg/cryptocom.mjs";import"../../svg/metamask.mjs";import"../../svg/okx-wallet.mjs";import"../../svg/phantom.mjs";import"../../svg/rabby.mjs";import"../../svg/rainbow.mjs";import"../../svg/safe.mjs";import"../../svg/solflare.mjs";import"../../svg/uniswap.mjs";import"../../svg/universal-profile.mjs";import"../../svg/wallet-connect.mjs";import"../../svg/zerion.mjs";import"../../utils/buffer/readBigInt64LE.mjs";import"../../lib/attempt.mjs";import"../../connectors/get-legacy-injected-providers.mjs";import"../../connectors/is-wallet-installed.mjs";import"../../utils/eth/getPublicClient.mjs";import"../../components/external-wallets/InjectedWalletIcon.mjs";import"@heroicons/react/24/outline/WalletIcon";import"../../components/ui/layout/Row.mjs";import"../../components/ui/typography/LabelSm.mjs";import"../../components/ui/typography/Value.mjs";import"../../components/ui/animation/LoadingSkeleton.mjs";import"../../components/ui/wallet/Address.mjs";import"@heroicons/react/24/outline/CheckIcon";import"@heroicons/react/24/outline/Square2StackIcon";import"../../components/ui/wallet/NetworkIcon.mjs";import"@heroicons/react/24/outline/GlobeAltIcon";import"../../components/ui/icons/Arbitum.mjs";import"../../components/ui/icons/Avalanche.mjs";import"../../components/ui/icons/Base.mjs";import"../../components/ui/icons/Celo.mjs";import"../../components/ui/icons/Linea.mjs";import"../../components/ui/icons/Mainnnet.mjs";import"../../components/ui/icons/Optimism.mjs";import"../../components/ui/icons/Polygon.mjs";import"../../components/ui/icons/Solana.mjs";import"../../components/ui/icons/Zora.mjs";import"../../hooks/useWallets.mjs";const P=()=>{let{closePrivyModal:P,createAnalyticsEvent:L}=v(),{navigate:R,setModalData:F,app:U,data:M}=y(),{wallets:O}=E(),_=k(),[W,B]=i(0n),[H,z]=i(null),[G,D]=i(!1),[$,q]=i(!1),V=s(!1);if(!M?.funding||"solana"!==M.funding.chainType)throw Error("Invalid funding data");let{address:Q,amount:X,cluster:Y,connectedWalletAddress:Z}=M.funding,J=T(Y),{tokenPrice:K}=w("solana"),{fundingAmountInBaseUnit:oo,totalPriceInUsd:to,totalPriceInNativeCurrency:no,feePriceInNativeCurrency:eo,feePriceInUsd:io}=S({amount:X,fee:W,tokenPrice:K}),so=Z?O.find((({address:o})=>o===Z)):O[0];if(r((()=>{(async()=>{if("solana"===so?.type&&so.sendTransaction&&!G&&!V.current){V.current=!0;try{let o=_(A);if(!o)throw new f("Unable to load solana plugin");let{connection:t,transaction:n}=await o.createTransferTransaction({from:so.address,to:Q,amount:oo,cluster:Y}),e=await n.getEstimatedFee(t);null!=e&&B(BigInt(e)),D(!0);let i=await t.simulateTransaction(n);if(i.value.err)return i.value.logs?.find((o=>/insufficient (lamports|funds)/gi.test(o)))?void z(new f(`Wallet ${C(so.address,void 0,void 0,"solana")} does not have enough funds.`,void 0,g.INSUFFICIENT_BALANCE)):(console.error("Transaction failed:",i.value.err),void z(new f("Something went wrong",void 0,g.TRANSACTION_FAILURE)));let s=await so.sendTransaction(n,t);L({eventName:b,payload:{provider:"external",status:"success",txHash:s,rpcEndpoint:J,address:so.address,value:m(oo,9),chainType:"solana",clusterName:Y.name,token:"SOL",destinationAddress:Q,destinationValue:m(oo,9),destinationChainType:"solana",destinationClusterName:Y.name,destinationToken:"SOL"}}),D(!1),q(!0)}catch(o){if(console.error(o),D(!1),/user rejected the request/gi.test(o.message||""))return void z(new f("Transaction was rejected by the user",void 0,g.TRANSACTION_FAILURE));z(new f("Something went wrong",void 0,g.TRANSACTION_FAILURE))}}})().catch(console.error).finally((()=>V.current=!1))}),[]),r((()=>{if(!H)return;let o={error:H,previousScreen:N.FUNDING_TRANSFER_FROM_WALLET_SCREEN};F({funding:M?.funding,sendTransaction:M?.sendTransaction,errorModalData:o}),R(N.ERROR_SCREEN,!1)}),[H]),r((()=>{if(!$)return;let o=setTimeout(P,h);return()=>clearTimeout(o)}),[$]),$/*#__PURE__*/)return o(t,{children:[/*#__PURE__*/n(d,{}),/*#__PURE__*/n(a,{}),/*#__PURE__*/o(c,{children:[/*#__PURE__*/n(e,{color:"var(--privy-color-success)",width:"64px",height:"64px"}),/*#__PURE__*/n(u,{title:"Success!",description:`Youâ€™ve successfully added ${X} SOL to your ${U.name} wallet. It may take a minute before the funds are available to use.`})]}),/*#__PURE__*/n(l,{}),/*#__PURE__*/n(p,{})]});let ro=so?I(so.walletClientType,so.connectorType,so.walletClientType)||"wallet":null;return so&&G?/*#__PURE__*/n(x,{wallet:so,displayName:ro,addressToFund:Q,isBridging:!1,isErc20Flow:!1,totalPriceInUsd:to,totalPriceInNativeCurrency:no,gasPriceInUsd:io,gasPriceInNativeCurrency:eo,chainId:"solana",chainName:Y.name}):
/*#__PURE__*/o(t,{children:[/*#__PURE__*/n(d,{}),/*#__PURE__*/n(j,{}),/*#__PURE__*/n("div",{style:{marginTop:"1rem"}}),/*#__PURE__*/n(p,{})]})};export{P as AwaitingExternalSolanaTransferScreen};
