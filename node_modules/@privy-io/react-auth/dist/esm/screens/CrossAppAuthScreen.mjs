import{jsxs as o,Fragment as e,jsx as t}from"react/jsx-runtime";import{useState as r,useEffect as n,useMemo as i}from"react";import{styled as s}from"styled-components";import{RefactorSpacerTop as c,FixedGappedContainer as m,RefactorSpacerBottom as a}from"../components/Layouts.mjs";import{ConnectionLoader as l}from"../components/Loader.mjs";import{ModalFooter as p}from"../components/ModalFooter.mjs";import{ModalHeader as u}from"../components/ModalHeader.mjs";import{ProviderAppLogo as d}from"../components/ProviderAppLogo.mjs";import h from"../components/layout/StackedContainer.mjs";import{useAppConfig as j}from"../configuration/context.mjs";import{DEFAULT_SUCCESS_SCREEN_DURATION_MS as f}from"../constants.mjs";import{RunEffectOnce as g}from"../effect.mjs";import{PrivyClientError as y,PrivyApiError as A}from"../errors.mjs";import{usePrivyInternal as C}from"../hooks/internal-context.mjs";import{usePrivyModal as b}from"../hooks/modal-context.mjs";import{useLogout as E}from"../hooks/useLogout.mjs";import{shouldProceedtoEmbeddedWalletCreationFlow as S}from"../lib/user/shouldProceedtoEmbeddedWalletCreationFlow.mjs";import{ModalScreen as x}from"./index.mjs";import"../svg/protected-by-privy.mjs";import"../config.mjs";import"../configuration/defaultClientConfig.mjs";import"../configuration/login-methods.mjs";import"../configuration/wallets.mjs";import"../connectors/chains/index.mjs";import"../connectors/chains/arbitrum.mjs";import"../connectors/chains/arbitrumSepolia.mjs";import"../connectors/chains/avalanche.mjs";import"../connectors/chains/avalancheFuji.mjs";import"../connectors/chains/base.mjs";import"../connectors/chains/baseSepolia.mjs";import"../connectors/chains/berachainArtio.mjs";import"../connectors/chains/celo.mjs";import"../connectors/chains/celoAlfajores.mjs";import"../connectors/chains/filecoin.mjs";import"../connectors/chains/filecoinCalibration.mjs";import"../connectors/chains/garnetHolesky.mjs";import"../connectors/chains/holesky.mjs";import"../connectors/chains/linea.mjs";import"../connectors/chains/lineaTestnet.mjs";import"../connectors/chains/lukso.mjs";import"../connectors/chains/mainnet.mjs";import"../connectors/chains/optimism.mjs";import"../connectors/chains/optimismSepolia.mjs";import"../connectors/chains/polygon.mjs";import"../connectors/chains/polygonAmoy.mjs";import"../connectors/chains/redstone.mjs";import"../connectors/chains/sepolia.mjs";import"../connectors/chains/zora.mjs";import"../connectors/chains/zoraSepolia.mjs";import"../connectors/chains/zoraTestnet.mjs";import"../connectors/chains/utils.mjs";import"../lib/solana/index.mjs";import"../theme.mjs";import"tinycolor2";import"../lib/cybr53.mjs";import"@heroicons/react/24/outline/ArrowLeftIcon";import"@heroicons/react/24/outline/ArrowRightIcon";import"@heroicons/react/24/outline/QuestionMarkCircleIcon";import"@heroicons/react/24/outline/XMarkIcon";import"../hooks/index.mjs";import"ofetch";import"../components/PrefetchedImage.mjs";import"../hooks/events-context.mjs";import"../hooks/privy-context.mjs";import"../lib/user/shouldCreateEmbeddedEthWallet.mjs";import"../client/user.mjs";import"viem/utils";import"../lib/user/shouldCreateEmbeddedSolWallet.mjs";const v=()=>{let s=j(),{data:v,navigate:w,setModalData:k,onUserCloseViaDialogOrKeybindRef:_}=b(),{crossAppAuthFlow:I,updateWallets:M,closePrivyModal:N,createAnalyticsEvent:O}=C(),{logout:U}=E(),[F,L]=r({}),W=v?.crossAppAuth,P={id:W.appId,name:W.name,logoUrl:W.logoUrl},R=new y(`There was an issue connecting your ${P.name} account. Please try again.`),D=new g((async o=>{if(W.popup)try{let e=await I({appId:o,popup:W.popup,action:W.action});L({data:e})}catch(o){o instanceof y?L({error:o}):(o instanceof A&&W.popup&&W.popup.close(),L({error:R}))}else L({error:R})})),$=()=>{F.data&&(M(),W.onSuccess(F.data),N({shouldCallAuthOnSuccess:!0,isSuccess:!0})),W.onError(F.error??new y("User canceled flow")),N({shouldCallAuthOnSuccess:!1,isSuccess:!1})};_.current=$,n((()=>{P.id.length&&D.execute(P.id)}),[P.id]),n((()=>{if(!F.data)return;let o=F.data;if(s.legal.requireUsersAcceptTerms&&!o.hasAcceptedTerms){let o=setTimeout((()=>{w(x.AFFIRMATIVE_CONSENT_SCREEN)}),f);return()=>clearTimeout(o)}if(S(o,s.embeddedWallets)){let o=setTimeout((()=>{k({createWallet:{onSuccess:()=>{},onFailure:o=>{console.error(o),O({eventName:"embedded_wallet_creation_failure_logout",payload:{error:o,provider:`privy:${P.id}`,screen:"CrossAppAuthScreen"}}),U()},callAuthOnSuccessOnClose:!0}}),w(x.EMBEDDED_WALLET_ON_ACCOUNT_CREATE_SCREEN)}),f);return()=>clearTimeout(o)}let e=setTimeout($,f);return()=>clearTimeout(e)}),[F.data]);let{title:z,subtitle:H}=i((()=>F.data?{title:`Successfully connected with ${P.name}`,subtitle:"You're good to go!"}:F.error?{title:"Authentication failed",subtitle:F.error.message}:{title:`Connecting to ${P.name}`,subtitle:`Please check the pop-up from ${P.name} to continue`}),[F,P.name]);/*#__PURE__*/return o(e,{children:[/*#__PURE__*/t(u,{onClose:$}),/*#__PURE__*/t(c,{}),/*#__PURE__*/o(T,{children:[/*#__PURE__*/t(h,{children:/*#__PURE__*/o("div",{children:[/*#__PURE__*/t(l,{success:!!F.data,fail:!!F.error}),/*#__PURE__*/t(d,{name:P.name,logoUrl:P.logoUrl})]})}),/*#__PURE__*/o(m,{children:[/*#__PURE__*/t("h3",{children:z}),/*#__PURE__*/t("p",{children:H})]})]}),/*#__PURE__*/t(a,{}),/*#__PURE__*/t(p,{})]})};let T=/*#__PURE__*/s.div.withConfig({displayName:"ConnectContainer",componentId:"sc-128f2a0d-0"})(["display:flex;flex-direction:column;align-items:center;justify-content:center;margin-left:27px;margin-right:27px;gap:24px;"]);export{v as CrossAppAuthScreen};
