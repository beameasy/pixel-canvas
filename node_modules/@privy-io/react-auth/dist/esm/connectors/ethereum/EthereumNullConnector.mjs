import{EthereumWalletConnector as t}from"./index.mjs";import{DEFAULT_RPC_TIMEOUT as e}from"../../constants.mjs";import{PrivyProxyProvider as i}from"../privyProxyProvider.mjs";import"viem/utils";import"../../errors.mjs";import"ofetch";import"../../storage.mjs";import"../../utils/index.mjs";import"../get-legacy-injected-providers.mjs";import"../is-wallet-installed.mjs";import"../../utils/eth/getPublicClient.mjs";import"viem";import"../areWalletArraysEqual.mjs";import"../isBaseConnectedEthereumWallet.mjs";import"../base.mjs";import"eventemitter3";import"../getRpcTimeout.mjs";import"../errors.mjs";import"@privy-io/js-sdk-core";class r extends t{get walletBranding(){return{id:this.id,name:this.name,icon:this.icon}}async initialize(){this.initialized=!0,this.emit("initialized")}async connect(){throw Error("connect called for an uninstalled wallet via the EthereumNullConnector")}disconnect(){throw Error("disconnect called for an uninstalled wallet via the EthereumNullConnector")}promptConnection(t){throw Error(`promptConnection called for an uninstalled wallet via the EthereumNullConnector for ${t}`)}constructor({id:t,name:r,icon:o,walletClientType:n,defaultChain:s}){super(n,[],s,{}),this.connectorType="null",this.proxyProvider=new i(void 0,e),this.id=t,this.name=r,this.icon=o,this.connectorType=n}}export{r as EthereumNullConnector};
