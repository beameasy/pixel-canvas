import{ofetch as o}from"ofetch";import{useState as n,useRef as t,useEffect as e}from"react";import{MOONPAY_API_URL_SANDBOX as r,MOONPAY_API_URL as i,MOONPAY_PUBLIC_KEY_SANDBOX as s,MOONPAY_PUBLIC_KEY as a}from"../../../constants.mjs";import{usePrivyInternal as c}from"../../../hooks/internal-context.mjs";import{usePrivyModal as m}from"../../../hooks/modal-context.mjs";import{ModalScreen as p}from"../../../screens/index.mjs";import{ON_RAMP_COMPLETE_ANALYTICS_EVENT as u}from"../analytics.mjs";import"../../../hooks/index.mjs";import"react/jsx-runtime";import"../../../components/PrefetchedImage.mjs";import"../../../configuration/context.mjs";import"../../../config.mjs";import"../../../configuration/defaultClientConfig.mjs";import"../../../configuration/login-methods.mjs";import"../../../configuration/wallets.mjs";import"../../../connectors/chains/index.mjs";import"../../../connectors/chains/arbitrum.mjs";import"../../../connectors/chains/arbitrumSepolia.mjs";import"../../../connectors/chains/avalanche.mjs";import"../../../connectors/chains/avalancheFuji.mjs";import"../../../connectors/chains/base.mjs";import"../../../connectors/chains/baseSepolia.mjs";import"../../../connectors/chains/berachainArtio.mjs";import"../../../connectors/chains/celo.mjs";import"../../../connectors/chains/celoAlfajores.mjs";import"../../../connectors/chains/filecoin.mjs";import"../../../connectors/chains/filecoinCalibration.mjs";import"../../../connectors/chains/garnetHolesky.mjs";import"../../../connectors/chains/holesky.mjs";import"../../../connectors/chains/linea.mjs";import"../../../connectors/chains/lineaTestnet.mjs";import"../../../connectors/chains/lukso.mjs";import"../../../connectors/chains/mainnet.mjs";import"../../../connectors/chains/optimism.mjs";import"../../../connectors/chains/optimismSepolia.mjs";import"../../../connectors/chains/polygon.mjs";import"../../../connectors/chains/polygonAmoy.mjs";import"../../../connectors/chains/redstone.mjs";import"../../../connectors/chains/sepolia.mjs";import"../../../connectors/chains/zora.mjs";import"../../../connectors/chains/zoraSepolia.mjs";import"../../../connectors/chains/zoraTestnet.mjs";import"../../../connectors/chains/utils.mjs";import"../../solana/index.mjs";import"../../../theme.mjs";import"tinycolor2";import"../../cybr53.mjs";const l="moonpay";function h(o){return parseFloat(o)}function d(o){return!!o&&void 0!==o.config&&void 0!==o.provider}function j(o){return!!o&&(void 0!==o.chain||void 0!==o.amount)}async function f(n,t){return o(`${t?r:i}/transactions/ext/${n}`,{query:{apiKey:t?s:a}})}function y(o,r=!1){let[i,s]=n(null),{createAnalyticsEvent:a}=c(),{data:h,navigate:d,setModalData:j}=m(),y=h?.funding,g=t(0);return e((()=>{let n=setInterval((async()=>{if(o)try{let[t]=await f(o,r),e="waitingAuthorization"===t.status&&"credit_debit_card"===t.paymentMethod?"pending":t.status;if(["failed","completed","awaitingAuthorization"].includes(e)&&(a({eventName:u,payload:{status:e,provider:l,paymentMethod:t.paymentMethod,cardPaymentType:t.cardPaymentType,currency:t.currency?.code,baseCurrencyAmount:t.baseCurrencyAmount,quoteCurrencyAmount:t.quoteCurrencyAmount,feeAmount:t.feeAmount,extraFeeAmount:t.extraFeeAmount,networkFeeAmount:t.networkFeeAmount,isSandbox:r}}),clearInterval(n)),"failed"===e||"serviceFailure"===e)return j({funding:{...y,errorMessage:"Something went wrong adding funds from Moonpay. Please try again or use another method to fund your wallet."}}),void d(p.FUNDING_METHOD_SELECTION_SCREEN);s(e)}catch(o){404!==o.response?.status&&(g.current+=1),g.current>=3&&(a({eventName:u,payload:{status:"serviceFailure",provider:l}}),clearInterval(n),j({funding:{...y,errorMessage:"Something went wrong adding funds from Moonpay. Please try again or use another method to fund your wallet."}}),d(p.FUNDING_METHOD_SELECTION_SCREEN))}}),3e3);return()=>clearInterval(n)}),[o,g]),i}export{l as MOONPAY_PROVIDER_ID,h as amountToMoonpayAmount,f as getMoonpayTransactionStatus,d as isLegacyMoonpayConfig,j as isNewFundWalletConfig,y as usePollMoonpayTransactionStatus};
