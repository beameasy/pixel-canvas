import{useEffect as t}from"react";import{PrivyClientError as e,PrivyErrorCode as r}from"../../errors.mjs";import"ofetch";let a="0x0000000000000000000000000000000000000000";const s=({destinationCurrency:t,...e})=>({tradeType:"EXACT_OUTPUT",originCurrency:a,destinationCurrency:t??a,...e});let n="https://api.relay.link",i="https://api.testnets.relay.link";const o=async({input:t,isTestnet:e})=>{let r=await fetch((e?i:n)+"/execute/swap",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(t)}),a=await r.json();if(!(r.ok||"string"==typeof a.message&&a.message.startsWith("Invalid address")))throw console.error("Relay error:",a),Error(a.message??"Error fetching quote from relay");return a},l=t=>{let e=t.steps[0]?.items?.[0];if(e)return{from:e.data.from,to:e.data.to,value:Number(e.data.value),chainId:Number(e.data.chainId),data:e.data.data}};async function c({transactionHash:t,isTestnet:e}){let r=await fetch((e?i:n)+"/requests/v2?hash="+t),a=await r.json();if(!r.ok){if("message"in a&&"string"==typeof a.message)throw Error(a.message);throw Error("Error fetching request from relay")}return a.requests.at(0)?.status??"pending"}function u({transactionHash:e,wallet:r,isTestnet:a,bridgingStatus:s,setBridgingStatus:n,onSuccess:i,onFailure:o}){t((()=>{if(e&&r&&s){if(["delayed","waiting","pending"].includes(s)){let t=setInterval((async()=>{try{let t=await c({transactionHash:e,isTestnet:a});n(t)}catch(t){console.error(t)}}),1e3);return()=>clearInterval(t)}"success"===s?i({transactionHash:e,wallet:r}):["refund","failure"].includes(s)&&o({error:new d(e,a)})}}),[s,e,a,r])}class d extends e{constructor(t,e){super("We were unable to complete the bridging transaction. Funds will be refunded on your wallet.",void 0,r.TRANSACTION_FAILURE),this.relayLink=e?`https://testnets.relay.link/transaction/${t}`:`https://relay.link/transaction/${t}`}}export{d as RelayRequestError,o as getQuote,l as toEvmTransactionRequestInfoFromQuote,s as toGetQuoteInput,u as useBridgingStatusPolling};
