import{getPrivyPrimaryWallet as e}from"../client/user.mjs";import{PrivyClientError as t}from"../errors.mjs";import"viem/utils";import"ofetch";const r=({address:e,user:r})=>{let d=r.linkedAccounts.find((t=>"wallet"===t.type&&"privy"===t.walletClientType&&t.address===e));if(!d)throw new t("Address to delegate is not associated with current user.");return{address:d.address,chainType:d.chainType,walletIndex:d.walletIndex??0}},d=({address:r,user:d})=>{let s=d.linkedAccounts.find((e=>"wallet"===e.type&&"privy"===e.walletClientType&&e.address===r));if(!s)throw new t("Address to delegate is not associated with current user.");let i=s.imported?s:e(d);if(!i)throw new t("Unable to determine root address for delegated address.");return{address:i.address,chainType:i.chainType,imported:i.imported}},s=e=>e.linkedAccounts.filter((e=>"wallet"===e.type&&"privy"===e.walletClientType&&e.delegated)),i=({address:e,chainType:t,user:r})=>!!s(r).find((r=>r.address===e&&r.chainType===t));export{r as getDelegatedWalletsData,s as getDelegatedWalletsForUser,d as getRootWalletDataForDelegation,i as isWalletDelegated};
