import{getImportedPrivySolanaWallet as e,getImportedPrivyEthereumWallet as t}from"../client/user.mjs";import{PrivyErrorCode as r,PrivyClientError as i}from"../errors.mjs";import"viem/utils";import"ofetch";const o=async({emitPrivyEvent:o,getAccessToken:n,initializeWalletProxy:a,refreshSessionAndUser:l,user:s},{privateKey:c,chainType:E})=>{if(!s)throw o("linkAccount","onError",r.MUST_BE_AUTHENTICATED,{linkMethod:"siwe"}),new i("User must be authenticated before linking an account.");let[m,u]=await Promise.all([n(),a(15e3)]);if(!u||!m)throw o("linkAccount","onError",r.MUST_BE_AUTHENTICATED,{linkMethod:"siwe"}),new i("User must be authenticated before linking an account.");await u.importWallet({privateKey:c,accessToken:m,chainType:E});let T=await l(),w="solana"===E?e(T):t(T);if(!w)throw o("createWallet","onError",r.UNKNOWN_EMBEDDED_WALLET_ERROR),Error("Failed to import wallet");return o("createWallet","onSuccess",{wallet:w}),w};export{o as importWallet};
