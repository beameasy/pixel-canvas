import{defaultClientConfig as e}from"./configuration/defaultClientConfig.mjs";import{toCustomLoginMethodConfig as n}from"./configuration/login-methods.mjs";import{toWalletListConfig as o}from"./configuration/wallets.mjs";import{DEFAULT_SUPPORTED_CHAINS as t}from"./connectors/chains/index.mjs";import{mainnet as a}from"./connectors/chains/mainnet.mjs";import{addPrivyRpcToChain as l}from"./connectors/chains/utils.mjs";import{SOLANA_MAINNET_RPC_URL as i,SOLANA_TESTNET_RPC_URL as s,SOLANA_DEVNET_RPC_URL as r}from"./lib/solana/index.mjs";import{generatePalette as c}from"./theme.mjs";import"./constants.mjs";import"./connectors/chains/arbitrum.mjs";import"./connectors/chains/arbitrumSepolia.mjs";import"./connectors/chains/avalanche.mjs";import"./connectors/chains/avalancheFuji.mjs";import"./connectors/chains/base.mjs";import"./connectors/chains/baseSepolia.mjs";import"./connectors/chains/berachainArtio.mjs";import"./connectors/chains/celo.mjs";import"./connectors/chains/celoAlfajores.mjs";import"./connectors/chains/filecoin.mjs";import"./connectors/chains/filecoinCalibration.mjs";import"./connectors/chains/garnetHolesky.mjs";import"./connectors/chains/holesky.mjs";import"./connectors/chains/linea.mjs";import"./connectors/chains/lineaTestnet.mjs";import"./connectors/chains/lukso.mjs";import"./connectors/chains/optimism.mjs";import"./connectors/chains/optimismSepolia.mjs";import"./connectors/chains/polygon.mjs";import"./connectors/chains/polygonAmoy.mjs";import"./connectors/chains/redstone.mjs";import"./connectors/chains/sepolia.mjs";import"./connectors/chains/zora.mjs";import"./connectors/chains/zoraSepolia.mjs";import"./connectors/chains/zoraTestnet.mjs";import"tinycolor2";function d(t,a,l,d){let h,m,u,g,f,C,b,y,w,W,A,M,O,j,U,k=l?console.warn:()=>{};a?.loginMethods?(h=a.loginMethods.includes("email"),m=a.loginMethods.includes("sms"),g=a.loginMethods.includes("wallet"),f=a.loginMethods.includes("google"),C=a.loginMethods.includes("twitter"),b=a.loginMethods.includes("discord"),w=a.loginMethods.includes("spotify"),W=a.loginMethods.includes("instagram"),y=a.loginMethods.includes("tiktok"),M=a.loginMethods.includes("github"),A=a.loginMethods.includes("linkedin"),O=a.loginMethods.includes("apple"),j=a.loginMethods.includes("farcaster"),U=a.loginMethods.includes("telegram")):(h=t.emailAuth,m=t.smsAuth,g=t.walletAuth||t.solanaWalletAuth,f=t.googleOAuth,C=t.twitterOAuth,b=t.discordOAuth,M=t.githubOAuth,w=t.spotifyOAuth,W=t.instagramOAuth,y=t.tiktokOAuth,A=t.linkedinOAuth,O=t.appleOAuth,j=t.farcasterAuth,U=t.telegramAuth),"undefined"!=typeof window&&"function"!=typeof window.PublicKeyCredential?u=!1:t.passkeyAuth&&(u=!0);let v=[h,m].filter(Boolean),S=[f,C,b,M,w,W,y,A,O,j,U].filter(Boolean),x=[g].filter(Boolean),L=[u&&t.passkeysForSignupEnabled].filter(Boolean);if(v.length+S.length+x.length+L.length===0)throw Error("You must enable at least one login method");let P=void 0!==a?.appearance?.showWalletLoginFirst?a?.appearance?.showWalletLoginFirst:t.showWalletLoginFirst;P&&0===x.length?(k("You should only enable `showWalletLoginFirst` when `wallet` logins are also enabled. `showWalletLoginFirst` has been set to false"),P=!1):P||S.length+v.length!==0||(k("You should only disable `showWalletLoginFirst` when `email`, `sms`, or social logins are also enabled. `showWalletLoginFirst` has been set to true"),P=!0);let F=a?.externalWallets?.walletConnect?.enabled??!0;a?.loginMethods&&a.loginMethodsAndOrder&&k("You should only configure one of `loginMethods` or `loginMethodsAndOrder`");let E=o({input:a?.appearance?.walletList,overrides:a?.loginMethodsAndOrder}),T=n({input:a?.loginMethodsAndOrder}),I=a?.intl?.defaultCountry??"US",{chains:q,defaultChain:R}=p({supportedChains:a?.supportedChains,defaultChainFromConfig:a?.defaultChain}),D=!!a?.defaultChain,H=a?.customAuth?.getCustomAccessToken&&!1!==a?.customAuth?.enabled,B=a?.embeddedWallets?.requireUserPasswordOnCreate,Y=a?.embeddedWallets?.createOnLogin,z=H?"all-users":t.embeddedWalletConfig.createOnLogin,K=a?.solanaClusters??[];return t.solanaWalletAuth&&!a?.externalWallets?.solana?.connectors&&console.warn("App configuration has Solana wallet login enabled, but no Solana wallet connectors have been passed to Privy. Make sure to pass Solana connectors to the `config.externalWallets.solana.connectors` field of the `PrivyProvider`"),{id:t.id,name:t.name,allowlistConfig:t.allowlistConfig,legacyWalletUiConfig:t.legacyWalletUiConfig,appearance:{logo:a?.appearance?.logo??t.logoUrl,landingHeader:a?.appearance?.landingHeader??e.appearance.landingHeader,loginMessage:"string"==typeof a?.appearance?.loginMessage?a?.appearance?.loginMessage.slice(0,100):a?.appearance?.loginMessage,footerLogo:a?.appearance?.footerLogo,palette:c({backgroundTheme:a?.appearance?.theme??e.appearance.theme,accentHex:a?.appearance?.accentColor??t.accentColor??e.appearance.accentColor}),loginGroupPriority:P?"web3-first":"web2-first",hideDirectWeb2Inputs:!!a?.appearance?.hideDirectWeb2Inputs,walletList:E,walletChainType:a?.appearance?.walletChainType??(({evmWalletAuth:e,solanaWalletAuth:n})=>e&&n?"ethereum-and-solana":e?"ethereum-only":n?"solana-only":"ethereum-only")({evmWalletAuth:t.walletAuth??!1,solanaWalletAuth:t.solanaWalletAuth??!1})},loginMethods:{wallet:g,email:h,sms:m,passkey:u,google:f,twitter:C,discord:b,github:M,spotify:w,instagram:W,tiktok:y,linkedin:A,apple:O,farcaster:j,telegram:U},disablePlusEmails:t.disablePlusEmails,loginMethodsAndOrder:T,legal:{termsAndConditionsUrl:a?.legal?.termsAndConditionsUrl??t.termsAndConditionsUrl,privacyPolicyUrl:a?.legal?.privacyPolicyUrl??t.privacyPolicyUrl,requireUsersAcceptTerms:t.requireUsersAcceptTerms??!1},walletConnectCloudProjectId:a?.walletConnectCloudProjectId??t.walletConnectCloudProjectId??e.walletConnectCloudProjectId,rpcConfig:{rpcUrls:{},rpcTimeouts:{}},chains:q,solanaClusters:{"mainnet-beta":K.find((e=>"mainnet-beta"===e.name))?.rpcUrl||i,testnet:K.find((e=>"testnet"===e.name))?.rpcUrl||s,devnet:K.find((e=>"devnet"===e.name))?.rpcUrl||r},defaultChain:R,intl:{defaultCountry:I},shouldEnforceDefaultChainOnConnect:D,captchaEnabled:t.captchaEnabled??e.captchaEnabled,captchaSiteKey:t.captchaSiteKey,externalWallets:{coinbaseWallet:{connectionOptions:a?.externalWallets?.coinbaseWallet?.connectionOptions??e.externalWallets.coinbaseWallet.connectionOptions},walletConnect:{enabled:F},solana:{connectors:a?.externalWallets?.solana?.connectors}},embeddedWallets:{requireUserOwnedRecoveryOnCreate:B??(!H&&t.embeddedWalletConfig.requireUserOwnedRecoveryOnCreate),userOwnedRecoveryOptions:H?["user-passcode"]:t.embeddedWalletConfig.userOwnedRecoveryOptions,priceDisplay:{primary:"fiat-currency",secondary:"native-token"},ethereum:{createOnLogin:Y??a?.embeddedWallets?.ethereum?.createOnLogin??z},solana:{createOnLogin:a?.embeddedWallets?.solana?.createOnLogin??"off"},showWalletUIs:a?.embeddedWallets?.showWalletUIs??t.enforceWalletUis??!0,extendedCalldataDecoding:a?.embeddedWallets?.extendedCalldataDecoding??!1,transactionScanning:{enabled:a?.embeddedWallets?.transactionScanning?.enabled??!1,domain:a?.embeddedWallets?.transactionScanning?.domain??d??"https://auth.privy.io"}},mfa:{methods:t.mfaMethods??[],noPromptOnMfaRequired:a?.mfa?.noPromptOnMfaRequired??!1},passkeys:{shouldUnlinkOnUnenrollMfa:a?.passkeys?.shouldUnlinkOnUnenrollMfa,shouldUnenrollMfaOnUnlink:a?.passkeys?.shouldUnenrollMfaOnUnlink},customAuth:H?{enabled:!0,...a.customAuth}:void 0,loginConfig:{telegramAuthConfiguration:t.telegramAuthConfiguration,passkeysForSignupEnabled:t.passkeysForSignupEnabled},headless:!!a?.headless,render:{standalone:a?._render?.standalone??e._render.standalone},fundingConfig:t.fundingConfig,fundingMethodConfig:{...a?.fundingMethodConfig??e.fundingMethodConfig,moonpay:{...a?.fundingMethodConfig?.moonpay??e.fundingMethodConfig.moonpay,useSandbox:a?.fundingMethodConfig?.moonpay.useSandbox??a?.fiatOnRamp?.useSandbox??e.fundingMethodConfig.moonpay.useSandbox}}}}function h(e){if(!e)return{};let{appearance:n,supportedChains:o,defaultChain:t,externalWallets:a,...l}=e;return{...l,...o?{supportedChains:o.map((e=>e.id))}:void 0,...t?{defaultChain:t.id}:void 0,...a?{walletConnect:a.walletConnect,coinbaseWallet:a.coinbaseWallet,solana:{connectors:a.solana?.connectors?.get().map((e=>e.walletClientType))}}:void 0}}function p({supportedChains:e,defaultChainFromConfig:n}){let o;if(e){if(0===e.length)throw Error("`supportedChains` must contain at least one chain");o=e.map((e=>{if(e.rpcUrls.privyWalletOverride)return e;let n=t.find((n=>n.id===e.id)),o=n?.rpcUrls.privy?.http[0];return o?l(e,o):e}))}else o=[...t];let i=e?o[0]:a,s=n??i;if(!o.find((e=>e.id===s.id)))throw Error("`defaultChain` must be included in `supportedChains`");return{chains:o,defaultChain:s}}export{p as buildChainsAndDefaultChain,d as generateAppConfig,h as generateClientConfigAnalyticsPayload};
